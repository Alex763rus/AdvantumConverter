{
  "swagger": "2.0",
  "info": {
    "title": "ATMS public api"
  },
  "host": "atms-test.advantum.ru",
  "basePath": "/public",
  "tags": [
    {
      "name": "api-type-controller",
      "description": "Сервис информации о типах API"
    },
    {
      "name": "brand-controller",
      "description": "Сервис марок ТС"
    },
    {
      "name": "carrier-controller",
      "description": "Сервис перевозчиков"
    },
    {
      "name": "carrier-division-controller",
      "description": "Сервис подразделений перевозчиков"
    },
    {
      "name": "carrier-organization-controller",
      "description": "Сервис организаций для перевозчиков"
    },
    {
      "name": "carrier-point-controller",
      "description": "Сервис точек перевозчика"
    },
    {
      "name": "customer-blacklist-controller",
      "description": "Сервис черных списков клиента"
    },
    {
      "name": "customer-controller",
      "description": "Сервис Заказчиков (Клиентов)"
    },
    {
      "name": "customer-point-controller",
      "description": "Точки клиентов"
    },
    {
      "name": "driver-assignment-controller",
      "description": "Сервис назначения водителя на ТС"
    },
    {
      "name": "driver-controller",
      "description": "Сервис водителей"
    },
    {
      "name": "driver-document-files-controller",
      "description": "Сервис файлов документов водителей"
    },
    {
      "name": "driver-documents-controller",
      "description": "Сервис документов водителей"
    },
    {
      "name": "fuel-service-controller",
      "description": "Fuel Service Controller"
    },
    {
      "name": "integration-task-controller",
      "description": "Integration Task Controller"
    },
    {
      "name": "model-controller",
      "description": "Сервис моделей ТС"
    },
    {
      "name": "sensor-controller",
      "description": "Контроллер для получения данных с сенсоров"
    },
    {
      "name": "shipment-controller",
      "description": "Сервис рейсов"
    },
    {
      "name": "shipment-files-controller",
      "description": "Сервис файлов к рейсам"
    },
    {
      "name": "shipment-request-controller",
      "description": "Сервис заявок на перевозку"
    },
    {
      "name": "shipment-request-route-template-controller",
      "description": "Сервис маршрутов"
    },
    {
      "name": "shipment-request-transport-document-controller",
      "description": "Shipment Request Transport Document Controller"
    },
    {
      "name": "shipment-request-with-dictionary-controller",
      "description": "Shipment Request With Dictionary Controller"
    },
    {
      "name": "shipment-state-controller",
      "description": "Сервис состояния прохождения рейсов"
    },
    {
      "name": "shipment-transport-document-controller",
      "description": "Shipment Transport Document Controller"
    },
    {
      "name": "shipment-with-dictionary-controller",
      "description": "Сервис обмена данных по рейсам"
    },
    {
      "name": "vehicle-controller",
      "description": "Сервис ТС"
    },
    {
      "name": "vehicle-document-files-controller",
      "description": "Сервис файлов документов ТС"
    },
    {
      "name": "vehicle-documents-controller",
      "description": "Сервис документов ТС"
    },
    {
      "name": "vehicle-no-availability-schedule-controller",
      "description": "Сервис графиков недоступности ТС"
    },
    {
      "name": "vehicle-pass-type-controller",
      "description": "Сервис типы пропусков для ТС"
    },
    {
      "name": "waybill-controller",
      "description": "Путевые листы"
    }
  ],
  "paths": {
    "/api-types/vehicle-body-types": {
      "get": {
        "tags": [
          "api-type-controller"
        ],
        "summary": "Получение информации о VehicleBodyType",
        "operationId": "getVehicleBodyTypeUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnumDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api-types/vehicle-body-types-description": {
      "get": {
        "tags": [
          "api-type-controller"
        ],
        "summary": "Получение информации о VehicleBodyType",
        "operationId": "getVehicleBodyTypeDescriptionUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api-types/vehicle-tilt-cover-dismantling-types": {
      "get": {
        "tags": [
          "api-type-controller"
        ],
        "summary": "Получение информации о TiltCoverDismantlingType",
        "operationId": "getTiltCoverDismantlingTypeUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnumDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api-types/vehicle-tilt-cover-dismantling-types-description": {
      "get": {
        "tags": [
          "api-type-controller"
        ],
        "summary": "Получение информации о TiltCoverDismantlingType",
        "operationId": "getTiltCoverDismantlingTypeDescriptionUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api-types/vehicle-types": {
      "get": {
        "tags": [
          "api-type-controller"
        ],
        "summary": "Получение информации о VehicleType",
        "operationId": "getVehicleTypeUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnumDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api-types/vehicle-types-description": {
      "get": {
        "tags": [
          "api-type-controller"
        ],
        "summary": "Получение информации о VehicleType",
        "operationId": "getVehicleBodyDescriptionUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/brands": {
      "get": {
        "tags": [
          "brand-controller"
        ],
        "summary": "Получение полного списка",
        "operationId": "getAllUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Марка ТС"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "brand-controller"
        ],
        "summary": "Создать",
        "operationId": "createUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Марка ТС"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Марка ТС"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/brands/{id}": {
      "get": {
        "tags": [
          "brand-controller"
        ],
        "summary": "Получение информации по id",
        "operationId": "getUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Марка ТС"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "brand-controller"
        ],
        "summary": "Обновить",
        "operationId": "updateUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Марка ТС"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "brand-controller"
        ],
        "summary": "Удалить",
        "operationId": "deleteUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/carrier-organizations": {
      "get": {
        "tags": [
          "carrier-organization-controller"
        ],
        "summary": "Получение полного списка",
        "operationId": "getAllUsingGET_2",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Организации перевозчика"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "carrier-organization-controller"
        ],
        "summary": "Создать",
        "operationId": "createUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Организации перевозчика"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Организации перевозчика"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/carrier-organizations/{id}": {
      "get": {
        "tags": [
          "carrier-organization-controller"
        ],
        "summary": "Получение информации по id",
        "operationId": "getUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Организации перевозчика"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "carrier-organization-controller"
        ],
        "summary": "Обновить",
        "operationId": "updateUsingPUT_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Организации перевозчика"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "carrier-organization-controller"
        ],
        "summary": "Удалить",
        "operationId": "deleteUsingDELETE_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/carrier-points": {
      "get": {
        "tags": [
          "carrier-point-controller"
        ],
        "summary": "Получение полного списка",
        "operationId": "getAllUsingGET_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "query",
            "description": "ID организации",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "ownHoldingOnly",
            "in": "query",
            "description": "Только по своему холдингу",
            "required": false,
            "type": "boolean",
            "default": false,
            "allowEmptyValue": false,
            "x-example": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Точка перевозчика"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "carrier-point-controller"
        ],
        "summary": "Создание точек",
        "operationId": "createUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "points",
            "description": "points",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Точка перевозчика"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MultipleEntitiesSavingResponse«Точка перевозчика»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "carrier-point-controller"
        ],
        "summary": "Обновление точек",
        "operationId": "updateUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "points",
            "description": "points",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Точка перевозчика"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MultipleEntitiesSavingResponse«Точка перевозчика»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/carrier-points/external-id": {
      "get": {
        "tags": [
          "carrier-point-controller"
        ],
        "summary": "Получение информации по внешнему идентификатору",
        "operationId": "getUsingGET_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "carrierId",
            "in": "query",
            "description": "carrierId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "externalId",
            "in": "query",
            "description": "externalId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Точка перевозчика"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/carrier-points/{id}": {
      "get": {
        "tags": [
          "carrier-point-controller"
        ],
        "summary": "Получение информации по id",
        "operationId": "getUsingGET_4",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Точка перевозчика"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "carrier-point-controller"
        ],
        "summary": "Удаление точки",
        "operationId": "deleteUsingDELETE_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/carrierDivisions": {
      "get": {
        "tags": [
          "carrier-division-controller"
        ],
        "summary": "Получение списка всех перевозчиков",
        "operationId": "getAllUsingGET_1",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Подразделение перевозчика"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "carrier-division-controller"
        ],
        "summary": "Создать",
        "operationId": "createUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Подразделение перевозчика"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Подразделение перевозчика"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/carrierDivisions/{id}": {
      "get": {
        "tags": [
          "carrier-division-controller"
        ],
        "summary": "Получение информации о подразделении перевозчика по id",
        "operationId": "getUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Подразделение перевозчика"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "carrier-division-controller"
        ],
        "summary": "Обновить",
        "operationId": "updateUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Подразделение перевозчика"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "carrier-division-controller"
        ],
        "summary": "Удалить",
        "operationId": "deleteUsingDELETE_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/carriers/current": {
      "get": {
        "tags": [
          "carrier-controller"
        ],
        "summary": "Получение информации о текущем перевозчике",
        "operationId": "currentUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Перевозчик (транспортная компания)"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/customer-blacklists/drivers": {
      "get": {
        "tags": [
          "customer-blacklist-controller"
        ],
        "summary": "Получение черного списка водителей",
        "operationId": "getBlacklistedDriversUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Черный список водителей по клиентам"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/customer-blacklists/drivers/{customerId}": {
      "get": {
        "tags": [
          "customer-blacklist-controller"
        ],
        "summary": "Получение черного списка водителей по id клиента",
        "operationId": "getBlacklistedDriversByCustomerUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Водитель"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "customer-blacklist-controller"
        ],
        "summary": "Добавление водителей в черный список",
        "operationId": "addDriversToBlacklistUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "driversIds",
            "in": "query",
            "description": "driversIds",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Водитель"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "customer-blacklist-controller"
        ],
        "summary": "Удаление водителей из черного списка",
        "operationId": "deleteDriversFromBlacklistUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "driversIds",
            "in": "query",
            "description": "driversIds",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/customer-blacklists/vehicles": {
      "get": {
        "tags": [
          "customer-blacklist-controller"
        ],
        "summary": "Получение черного списка ТС",
        "operationId": "getBlacklistedVehiclesUsingGET_1",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Черный список ТС по клиентам"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/customer-blacklists/vehicles/{customerId}": {
      "get": {
        "tags": [
          "customer-blacklist-controller"
        ],
        "summary": "Получение черного списка ТС по id клиента",
        "operationId": "getBlacklistedVehiclesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Транспортное средство"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "customer-blacklist-controller"
        ],
        "summary": "Добавление ТС в черный список",
        "operationId": "addVehiclesToBlacklistUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "vehiclesIds",
            "in": "query",
            "description": "vehiclesIds",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Транспортное средство"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "customer-blacklist-controller"
        ],
        "summary": "Удаление ТС из черного списка",
        "operationId": "deleteVehiclesFromBlacklistUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "vehiclesIds",
            "in": "query",
            "description": "vehiclesIds",
            "required": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/customer-points": {
      "get": {
        "tags": [
          "customer-point-controller"
        ],
        "summary": "Получение точек всех клиентов перевозчика",
        "operationId": "getAllUsingGET_5",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "query",
            "description": "ID организации",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "ownHoldingOnly",
            "in": "query",
            "description": "Только по своему холдингу",
            "required": false,
            "type": "boolean",
            "default": false,
            "allowEmptyValue": false,
            "x-example": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Точка клиента"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "customer-point-controller"
        ],
        "summary": "Создание точек",
        "operationId": "createUsingPOST_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "points",
            "description": "points",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Точка клиента"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MultipleEntitiesSavingResponse«Точка клиента»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "customer-point-controller"
        ],
        "summary": "Обновление точек",
        "operationId": "updateUsingPUT_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "points",
            "description": "points",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Точка клиента"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MultipleEntitiesSavingResponse«Точка клиента»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/customer-points/{id}": {
      "get": {
        "tags": [
          "customer-point-controller"
        ],
        "summary": "Получение точки по ID",
        "operationId": "findByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Точка клиента"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "customer-point-controller"
        ],
        "summary": "Удаление точки",
        "operationId": "deleteUsingDELETE_5",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "customer-controller"
        ],
        "summary": "Получение списка всех заказчиков",
        "operationId": "getAllUsingGET_4",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Заказчик перевозок"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "customer-controller"
        ],
        "summary": "Создать",
        "operationId": "createUsingPOST_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Заказчик перевозок"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Заказчик перевозок"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/customers/external-id": {
      "get": {
        "tags": [
          "customer-controller"
        ],
        "summary": "Получение информации по внешнему идентификатору",
        "operationId": "getUsingGET_5",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "externalId",
            "in": "query",
            "description": "externalId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Заказчик перевозок"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/customers/{id}": {
      "get": {
        "tags": [
          "customer-controller"
        ],
        "summary": "Получение информации о заказчике по id",
        "operationId": "getUsingGET_6",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Заказчик перевозок"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "customer-controller"
        ],
        "summary": "Обновить",
        "operationId": "updateUsingPUT_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Заказчик перевозок"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "customer-controller"
        ],
        "summary": "Удалить",
        "operationId": "deleteUsingDELETE_4",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/driver-assignments": {
      "get": {
        "tags": [
          "driver-assignment-controller"
        ],
        "summary": "Получение полного списка",
        "operationId": "getAllUsingGET_6",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Назначение водителя на ТС"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "driver-assignment-controller"
        ],
        "summary": "Создать",
        "operationId": "createUsingPOST_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Назначение водителя на ТС"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Назначение водителя на ТС"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/driver-assignments/external-id": {
      "get": {
        "tags": [
          "driver-assignment-controller"
        ],
        "summary": "Получение информации по внешнему идентификатору",
        "operationId": "getUsingGET_7",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "externalId",
            "in": "query",
            "description": "externalId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Назначение водителя на ТС"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/driver-assignments/{id}": {
      "get": {
        "tags": [
          "driver-assignment-controller"
        ],
        "summary": "Получение информации по id",
        "operationId": "getUsingGET_8",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Назначение водителя на ТС"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "driver-assignment-controller"
        ],
        "summary": "Обновить",
        "operationId": "updateUsingPUT_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Назначение водителя на ТС"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "driver-assignment-controller"
        ],
        "summary": "Удалить",
        "operationId": "deleteUsingDELETE_6",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/driver-documents": {
      "post": {
        "tags": [
          "driver-documents-controller"
        ],
        "summary": "Создать",
        "operationId": "createUsingPOST_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Документ водителя"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Документ водителя"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/driver-documents-files/by-driver-document/{driver_document_id}": {
      "get": {
        "tags": [
          "driver-document-files-controller"
        ],
        "summary": "Получение списка файлов по документу водителя",
        "operationId": "getAllByDocumentIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "driver_document_id",
            "in": "path",
            "description": "driver_document_id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DriverDocumentFileDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/driver-documents-files/{id}": {
      "get": {
        "tags": [
          "driver-document-files-controller"
        ],
        "summary": "Получение файла по id",
        "operationId": "getByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id файла",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/driver-documents/by-driver/{driver_id}": {
      "get": {
        "tags": [
          "driver-documents-controller"
        ],
        "summary": "Получение информации о документах водителя по id водителя",
        "operationId": "getAllByDriverIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "driver_id",
            "in": "path",
            "description": "driver_id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Документ водителя с вложениями"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/driver-documents/{id}": {
      "get": {
        "tags": [
          "driver-documents-controller"
        ],
        "summary": "Получение информации о документах водителя по id документа",
        "operationId": "getByIdUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Документ водителя с вложениями"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "driver-documents-controller"
        ],
        "summary": "Обновить",
        "operationId": "updateUsingPUT_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Документ водителя"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "driver-documents-controller"
        ],
        "summary": "Удалить",
        "operationId": "deleteUsingDELETE_8",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/drivers": {
      "get": {
        "tags": [
          "driver-controller"
        ],
        "summary": "Получение всего списка",
        "operationId": "getAllUsingGET_7",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Водитель"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "driver-controller"
        ],
        "summary": "Создать",
        "operationId": "createUsingPOST_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Водитель"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Водитель"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/drivers/external-id/{externalId}/": {
      "get": {
        "tags": [
          "driver-controller"
        ],
        "summary": "Получение информации о водителе по externalId",
        "operationId": "getByExternalIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "externalId",
            "in": "path",
            "description": "externalId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Водитель"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/drivers/{id}": {
      "get": {
        "tags": [
          "driver-controller"
        ],
        "summary": "Получение информации о водителе по id",
        "operationId": "getUsingGET_9",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Водитель"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "driver-controller"
        ],
        "summary": "Обновить",
        "operationId": "updateUsingPUT_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Водитель"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "driver-controller"
        ],
        "summary": "Удалить",
        "operationId": "deleteUsingDELETE_7",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/fuel-service-api/bind": {
      "post": {
        "tags": [
          "fuel-service-controller"
        ],
        "summary": "привязать карту",
        "operationId": "bindUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardNum",
            "in": "query",
            "description": "cardNum",
            "required": true,
            "type": "string"
          },
          {
            "name": "externalTrId",
            "in": "query",
            "description": "externalTrId",
            "required": false,
            "type": "string"
          },
          {
            "name": "gosNum",
            "in": "query",
            "description": "gosNum",
            "required": false,
            "type": "string"
          },
          {
            "name": "trId",
            "in": "query",
            "description": "trId",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/fuel-service-api/contracts": {
      "get": {
        "tags": [
          "fuel-service-controller"
        ],
        "summary": "Получение контрактов для всех организаций холдинга",
        "operationId": "findContractCodesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/fuel-service-api/transactions": {
      "get": {
        "tags": [
          "fuel-service-controller"
        ],
        "summary": "Получение транзакций за период по договору",
        "operationId": "getByUtcTimeBetweenAndContractUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "begin",
            "in": "query",
            "description": "begin",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "contractNumber",
            "in": "query",
            "description": "contractNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RnCardTransactionPublicDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/fuel-service-api/transactions-3hour": {
      "get": {
        "tags": [
          "fuel-service-controller"
        ],
        "summary": "Получение транзакций за последние три часа по договору",
        "operationId": "findTransactionsForContractLast3HourUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "contractNumber",
            "in": "query",
            "description": "contractNumber",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RnCardTransactionPublicDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/fuel-service-api/unbind": {
      "post": {
        "tags": [
          "fuel-service-controller"
        ],
        "summary": "отвязать карту",
        "operationId": "unbindUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cardNum",
            "in": "query",
            "description": "cardNum",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/models": {
      "get": {
        "tags": [
          "model-controller"
        ],
        "summary": "Получение полного списка",
        "operationId": "getAllUsingGET_8",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Модель ТС"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "model-controller"
        ],
        "summary": "Создать",
        "operationId": "createUsingPOST_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Модель ТС"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Модель ТС"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/models/{id}": {
      "get": {
        "tags": [
          "model-controller"
        ],
        "summary": "Получение информации по id",
        "operationId": "getUsingGET_10",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Модель ТС"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "model-controller"
        ],
        "summary": "Обновить",
        "operationId": "updateUsingPUT_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Модель ТС"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "model-controller"
        ],
        "summary": "Удалить",
        "operationId": "deleteUsingDELETE_9",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/routes/route-and-dictionary": {
      "post": {
        "tags": [
          "shipment-with-dictionary-controller"
        ],
        "summary": "Создание/обновление рейса с автоматической актуализацией справочных данных",
        "operationId": "createOrUpdateShipmentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "routeWithDictionary",
            "description": "routeWithDictionary",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouteWithDictionaryDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/routes/{externalId}": {
      "post": {
        "tags": [
          "shipment-with-dictionary-controller"
        ],
        "summary": "Отмена выполнения рейса",
        "operationId": "cancelShipmentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "externalId",
            "in": "path",
            "description": "externalId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/sensors": {
      "get": {
        "tags": [
          "sensor-controller"
        ],
        "summary": "Получение данных с датчиков двери и температуры для ТС",
        "operationId": "getSensorValuesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "gosnum",
            "in": "query",
            "description": "gosnum",
            "required": true,
            "type": "string"
          },
          {
            "name": "timeFrom",
            "in": "query",
            "description": "timeFrom",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "timeTo",
            "in": "query",
            "description": "timeTo",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TemperatureAndDoorSensorValuesDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipment-request/route-template": {
      "get": {
        "tags": [
          "shipment-request-route-template-controller"
        ],
        "summary": "Получение списка маршрутов для указанного клиента",
        "operationId": "getAllUsingGET_9",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "customerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Темплейт маршрута для рейса"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "shipment-request-route-template-controller"
        ],
        "summary": "Создание маршрута",
        "operationId": "createUsingPOST_11",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Темплейт маршрута для рейса"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Темплейт маршрута для рейса"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "shipment-request-route-template-controller"
        ],
        "summary": "Редактирование маршрута",
        "operationId": "updateUsingPUT_11",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Темплейт маршрута для рейса"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipment-request/route-template/{templateId}": {
      "delete": {
        "tags": [
          "shipment-request-route-template-controller"
        ],
        "summary": "Удаление маршрута",
        "operationId": "deleteUsingDELETE_10",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "templateId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipmentRequests": {
      "post": {
        "tags": [
          "shipment-request-controller"
        ],
        "summary": "Создание заявки",
        "operationId": "createUsingPOST_10",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "shipmentRequestDto",
            "description": "shipmentRequestDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Заявка на перевозку"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Заявка на перевозку"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipmentRequests/findByModificationDate": {
      "get": {
        "tags": [
          "shipment-request-controller"
        ],
        "summary": "Получение списка заявок на дату",
        "description": "Возвращает список зявок измененных в запрашиваемом периоде",
        "operationId": "findByModificationDateUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "fromTime",
            "in": "query",
            "description": "Дата и время",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false
          },
          {
            "name": "toTime",
            "in": "query",
            "description": "Дата и время",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Заявка на перевозку"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipmentRequests/points/documents": {
      "put": {
        "tags": [
          "shipment-request-transport-document-controller"
        ],
        "summary": "Updates a document and returns the updated document",
        "operationId": "updateDocumentUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransportDocumentDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportDocumentDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipmentRequests/points/documents/item/{id}": {
      "delete": {
        "tags": [
          "shipment-request-transport-document-controller"
        ],
        "summary": "Deletes a document position by id and returns the updated document",
        "operationId": "deleteDocumentItemByIdUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportDocumentDto"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipmentRequests/points/documents/items": {
      "put": {
        "tags": [
          "shipment-request-transport-document-controller"
        ],
        "summary": "Updates a number of positions to the document with specified id and returns the updated document",
        "operationId": "updateDocumentItemsByDocumentIdUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtos",
            "description": "dtos",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransportDocumentPositionDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportDocumentDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipmentRequests/points/documents/{id}": {
      "delete": {
        "tags": [
          "shipment-request-transport-document-controller"
        ],
        "summary": "Deletes a document position by id and returns the updated document",
        "operationId": "deleteDocumentByIdUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipmentRequests/points/documents/{id}/items": {
      "post": {
        "tags": [
          "shipment-request-transport-document-controller"
        ],
        "summary": "Adds a number of positions to the document with specified id and returns the updated document",
        "operationId": "addDocumentItemsByDocumentIdUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtos",
            "description": "dtos",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransportDocumentPositionDto"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportDocumentDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipmentRequests/points/{id}/documents": {
      "get": {
        "tags": [
          "shipment-request-transport-document-controller"
        ],
        "summary": "Returns all the documents belonging to the shipment request point specified by point id",
        "operationId": "getDocumentByPointIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransportDocumentDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "shipment-request-transport-document-controller"
        ],
        "summary": "Adds a document to the shipment request point specified by id and returns the created document",
        "operationId": "addDocumentByPointIdUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransportDocumentDto"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportDocumentDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipmentRequests/request-and-dictionary": {
      "post": {
        "tags": [
          "shipment-request-with-dictionary-controller"
        ],
        "summary": "Создание/обновление заявки с автоматической актуализацией справочных данных",
        "operationId": "createOrUpdateShipmentRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "requestWithDictionaryDto",
            "description": "requestWithDictionaryDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Заявка на перевозку с обновлением справочников"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipmentRequests/{id}": {
      "get": {
        "tags": [
          "shipment-request-controller"
        ],
        "summary": "Получение информации о заявке по id",
        "operationId": "getUsingGET_12",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Заявка на перевозку"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "shipment-request-controller"
        ],
        "summary": "Обновление заявки",
        "operationId": "updateUsingPUT_10",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "shipmentRequestDto",
            "description": "shipmentRequestDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Заявка на перевозку"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipmentRequests/{id}/external-id": {
      "put": {
        "tags": [
          "shipment-request-controller"
        ],
        "summary": "Обновление внешнего идентифокатора, если он не указан",
        "operationId": "setExternalIdIfNotSetUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "externalId",
            "in": "query",
            "description": "externalId",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipmentRequests/{id}/status": {
      "patch": {
        "tags": [
          "shipment-request-controller"
        ],
        "summary": "Обновление статуса заявки",
        "operationId": "changeStatusUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "statusChangeRequestDto",
            "description": "statusChangeRequestDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ShipmentRequestStatusChangeRequestDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipmentStates/findByStatusesAndModificationDate": {
      "get": {
        "tags": [
          "shipment-state-controller"
        ],
        "summary": "Получение списка измененных состояний рейсов",
        "description": "Возвращает список состояний рейсов в запрашиваемых статусах и измененных в запрашиваемом периоде",
        "operationId": "findByStatusesModificationDateUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "fromTime",
            "in": "query",
            "description": "Дата и время",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "statuses",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NEW",
                "PENDING",
                "ACCEPTED",
                "EXECUTING",
                "COMPLETED",
                "REJECTED",
                "NOT_COMPLETED",
                "PARTIALLY_COMPLETED"
              ]
            },
            "collectionFormat": "multi",
            "enum": [
              "NEW",
              "PENDING",
              "ACCEPTED",
              "EXECUTING",
              "COMPLETED",
              "REJECTED",
              "NOT_COMPLETED",
              "PARTIALLY_COMPLETED"
            ]
          },
          {
            "name": "toTime",
            "in": "query",
            "description": "Дата и время",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Состояние прохождения рейса"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipmentStates/{id}": {
      "get": {
        "tags": [
          "shipment-state-controller"
        ],
        "summary": "Получение информации о состоянии рейса по id",
        "operationId": "getUsingGET_13",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Состояние прохождения рейса"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipments/creation-with-shipment-request": {
      "post": {
        "tags": [
          "shipment-controller"
        ],
        "summary": "createShipmentRequestAndShipment",
        "operationId": "createShipmentRequestAndShipmentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Заявка на перевозку с созданием рейса"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Рейс"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipments/external-id/{external-id}": {
      "get": {
        "tags": [
          "shipment-controller"
        ],
        "summary": "Получение информации по рейсам по externalId заявки",
        "operationId": "getByExternalIdUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "external-id",
            "in": "path",
            "description": "external-id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Рейс"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipments/filter/start-in-interval": {
      "get": {
        "tags": [
          "shipment-controller"
        ],
        "summary": "Получение рейсов начинающихся в указанном временном интервале",
        "operationId": "getAllStartingInIntervalUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "fromTime",
            "in": "query",
            "description": "Дата и время",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false
          },
          {
            "name": "toTime",
            "in": "query",
            "description": "Дата и время",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Рейс c прикрепленными файлами"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipments/findByStatusesAndModificationDate": {
      "get": {
        "tags": [
          "shipment-controller"
        ],
        "summary": "Получение рейсов измененных в указанном временном интервале и статусе",
        "operationId": "getAllByModificationDateUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "fromTime",
            "in": "query",
            "description": "Дата и время",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "statuses",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NEW",
                "PENDING",
                "ACCEPTED",
                "EXECUTING",
                "COMPLETED",
                "REJECTED",
                "NOT_COMPLETED",
                "PARTIALLY_COMPLETED"
              ]
            },
            "collectionFormat": "multi",
            "enum": [
              "NEW",
              "PENDING",
              "ACCEPTED",
              "EXECUTING",
              "COMPLETED",
              "REJECTED",
              "NOT_COMPLETED",
              "PARTIALLY_COMPLETED"
            ]
          },
          {
            "name": "toTime",
            "in": "query",
            "description": "Дата и время",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Рейс c прикрепленными файлами"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipments/points/documents": {
      "put": {
        "tags": [
          "shipment-transport-document-controller"
        ],
        "summary": "Updates a document and returns the updated document",
        "operationId": "updateDocumentUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransportDocumentDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportDocumentDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipments/points/documents/item/{id}": {
      "delete": {
        "tags": [
          "shipment-transport-document-controller"
        ],
        "summary": "Deletes a document position by id and returns the updated document",
        "operationId": "deleteDocumentItemByIdUsingDELETE_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportDocumentDto"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipments/points/documents/items": {
      "put": {
        "tags": [
          "shipment-transport-document-controller"
        ],
        "summary": "Updates a number of positions to the document with specified id and returns the updated document",
        "operationId": "updateDocumentItemsByDocumentIdUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtos",
            "description": "dtos",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransportDocumentPositionDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportDocumentDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipments/points/documents/{id}": {
      "delete": {
        "tags": [
          "shipment-transport-document-controller"
        ],
        "summary": "Deletes a document position by id and returns the updated document",
        "operationId": "deleteDocumentByIdUsingDELETE_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipments/points/documents/{id}/items": {
      "post": {
        "tags": [
          "shipment-transport-document-controller"
        ],
        "summary": "Adds a number of positions to the document with specified id and returns the updated document",
        "operationId": "addDocumentItemsByDocumentIdUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtos",
            "description": "dtos",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransportDocumentPositionDto"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportDocumentDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipments/points/{id}/documents": {
      "get": {
        "tags": [
          "shipment-transport-document-controller"
        ],
        "summary": "Returns all the documents belonging to the shipment point specified by point id",
        "operationId": "getDocumentByPointIdUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransportDocumentDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "shipment-transport-document-controller"
        ],
        "summary": "Adds a document to the shipment point specified by id and returns the created document",
        "operationId": "addDocumentByPointIdUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransportDocumentDto"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransportDocumentDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipments/{id}": {
      "get": {
        "tags": [
          "shipment-controller"
        ],
        "summary": "Получение информации по рейсу по id",
        "operationId": "getUsingGET_11",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Рейс"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipments/{id}/characteristics": {
      "put": {
        "tags": [
          "shipment-controller"
        ],
        "summary": "changeCharacteristics",
        "operationId": "changeCharacteristicsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "characteristics",
            "description": "characteristics",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveShipmentCharacteristicsCommandPublicDto"
            }
          },
          {
            "name": "checkIfVehiclesHaveLateByDistance",
            "in": "query",
            "description": "checkIfVehiclesHaveLateByDistance",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Рейс"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipments/{id}/driver": {
      "put": {
        "tags": [
          "shipment-controller"
        ],
        "summary": "changeDriver",
        "operationId": "changeDriverUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "driverExternalId",
            "in": "query",
            "description": "driverExternalId",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Рейс"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipments/{id}/points": {
      "put": {
        "tags": [
          "shipment-controller"
        ],
        "summary": "updatePoints",
        "operationId": "updatePointsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "pointDtos",
            "description": "pointDtos",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SaveShipmentStatePointCommandPublicDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipments/{id}/vehicle": {
      "put": {
        "tags": [
          "shipment-controller"
        ],
        "summary": "changeVehicle",
        "operationId": "changeVehicleUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "vehicleExternalId",
            "in": "query",
            "description": "vehicleExternalId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Рейс"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipments/{shipmentId}/files": {
      "get": {
        "tags": [
          "shipment-files-controller"
        ],
        "summary": "Получение списка файлов по рейсу",
        "operationId": "getAllByShipmentIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "shipmentId",
            "in": "path",
            "description": "shipmentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ShipmentFileWebDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/shipments/{shipmentId}/files/{fileId}": {
      "get": {
        "tags": [
          "shipment-files-controller"
        ],
        "summary": "Получение файла по id",
        "operationId": "getFileByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "fileId",
            "required": true,
            "type": "string"
          },
          {
            "name": "shipmentId",
            "in": "path",
            "description": "shipmentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/task-service-api/bind-list": {
      "post": {
        "tags": [
          "integration-task-controller"
        ],
        "summary": "bindCardList",
        "operationId": "bindCardListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "bindingList",
            "description": "bindingList",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PublicCardBindingRequestDto"
              }
            }
          },
          {
            "name": "taskId",
            "in": "query",
            "description": "taskId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/task-service-api/task": {
      "get": {
        "tags": [
          "integration-task-controller"
        ],
        "summary": "findTaskForClient",
        "operationId": "findTaskForClientUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskDto2"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/vehicle-document-files/by-vehicle-document/{vehicle_document_id}": {
      "get": {
        "tags": [
          "vehicle-document-files-controller"
        ],
        "summary": "Получение списка файлов по документу ТС",
        "operationId": "getAllByDocumentIdUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "vehicle_document_id",
            "in": "path",
            "description": "vehicle_document_id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VehicleDocumentFileDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/vehicle-document-files/{id}": {
      "get": {
        "tags": [
          "vehicle-document-files-controller"
        ],
        "summary": "Получение файла по id",
        "operationId": "getByIdUsingGET_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id файла",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/vehicle-documents": {
      "post": {
        "tags": [
          "vehicle-documents-controller"
        ],
        "summary": "Создать",
        "operationId": "createUsingPOST_13",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Документы ТС"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Документы ТС"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/vehicle-documents/by-vehicle/{vehicle_id}": {
      "get": {
        "tags": [
          "vehicle-documents-controller"
        ],
        "summary": "Получение документов по id ТС",
        "operationId": "getAllByVehicleIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "description": "vehicle_id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Документы ТС с вложениями"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/vehicle-documents/{id}": {
      "get": {
        "tags": [
          "vehicle-documents-controller"
        ],
        "summary": "Получение документа по id",
        "operationId": "getByIdUsingGET_4",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Документы ТС с вложениями"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "vehicle-documents-controller"
        ],
        "summary": "Обновить",
        "operationId": "updateUsingPUT_13",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Документы ТС"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "vehicle-documents-controller"
        ],
        "summary": "Удалить",
        "operationId": "deleteUsingDELETE_12",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/vehicle-na-schedules": {
      "get": {
        "tags": [
          "vehicle-no-availability-schedule-controller"
        ],
        "summary": "Получение полного списка",
        "operationId": "getAllUsingGET_11",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/График недоступности ТС"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "vehicle-no-availability-schedule-controller"
        ],
        "summary": "Создать",
        "operationId": "createUsingPOST_14",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/График недоступности ТС"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/График недоступности ТС"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/vehicle-na-schedules/external-id": {
      "get": {
        "tags": [
          "vehicle-no-availability-schedule-controller"
        ],
        "summary": "Получение информации по внешнему идентификатору",
        "operationId": "getUsingGET_15",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "externalId",
            "in": "query",
            "description": "externalId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/График недоступности ТС"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/vehicle-na-schedules/{id}": {
      "get": {
        "tags": [
          "vehicle-no-availability-schedule-controller"
        ],
        "summary": "Получение информации по id",
        "operationId": "getUsingGET_16",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/График недоступности ТС"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "vehicle-no-availability-schedule-controller"
        ],
        "summary": "Обновить",
        "operationId": "updateUsingPUT_14",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": false,
            "schema": {
              "$ref": "#/definitions/График недоступности ТС"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "vehicle-no-availability-schedule-controller"
        ],
        "summary": "Удалить",
        "operationId": "deleteUsingDELETE_13",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/vehicles": {
      "get": {
        "tags": [
          "vehicle-controller"
        ],
        "summary": "Получение списка всех ТС",
        "operationId": "getAllUsingGET_10",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Транспортное средство"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "vehicle-controller"
        ],
        "summary": "Создать",
        "operationId": "createUsingPOST_12",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Транспортное средство"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Транспортное средство"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/vehicles-pass-types": {
      "get": {
        "tags": [
          "vehicle-pass-type-controller"
        ],
        "summary": "Получение списка всех типов пропусков для ТС",
        "operationId": "getAllUsingGET_12",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Тип пропуска ТС"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/vehicles-pass-types/{id}": {
      "get": {
        "tags": [
          "vehicle-pass-type-controller"
        ],
        "summary": "Получение информации о типе пропуска для ТС по id",
        "operationId": "getUsingGET_17",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Тип пропуска ТС"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/vehicles/external-id/{externalId}/": {
      "get": {
        "tags": [
          "vehicle-controller"
        ],
        "summary": "Получение информации о ТС по externalId",
        "operationId": "getByExternalIdUsingGET_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "externalId",
            "in": "path",
            "description": "externalId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Транспортное средство"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/vehicles/{id}": {
      "get": {
        "tags": [
          "vehicle-controller"
        ],
        "summary": "Получение информации о ТС по id",
        "operationId": "getUsingGET_14",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Транспортное средство"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "vehicle-controller"
        ],
        "summary": "Обновить",
        "operationId": "updateUsingPUT_12",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Транспортное средство"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "vehicle-controller"
        ],
        "summary": "Удалить",
        "operationId": "deleteUsingDELETE_11",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/waybill": {
      "post": {
        "tags": [
          "waybill-controller"
        ],
        "summary": "Импорт путевого листа",
        "operationId": "createUsingPOST_15",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Путевой лист"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "JWT": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    }
  },
  "securityDefinitions": {
    "JWT": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "DriverDocumentFileDto": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "fileName": {
          "type": "string"
        },
        "fileType": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "path": {
          "type": "string"
        }
      },
      "title": "DriverDocumentFileDto"
    },
    "EnumDto": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "EnumDto"
    },
    "ErrorDto": {
      "type": "object",
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "title": "ErrorDto"
    },
    "ExternalBrandDto": {
      "type": "object",
      "required": [
        "externalId",
        "name"
      ],
      "properties": {
        "externalId": {
          "type": "string",
          "description": "ИД марки ТС в ИС Предприятия"
        },
        "name": {
          "type": "string",
          "description": "Наименование марки ТС"
        }
      },
      "title": "ExternalBrandDto"
    },
    "ExternalDriverDto": {
      "type": "object",
      "required": [
        "externalId",
        "firstName",
        "lastName"
      ],
      "properties": {
        "externalId": {
          "type": "string",
          "description": "ИД водителя в ИС Предприятия"
        },
        "lastName": {
          "type": "string",
          "description": "Фамилия"
        },
        "firstName": {
          "type": "string",
          "description": "Имя"
        },
        "middleName": {
          "type": "string",
          "description": "Отчество"
        }
      },
      "title": "ExternalDriverDto"
    },
    "ExternalModelDto": {
      "type": "object",
      "required": [
        "externalId",
        "name"
      ],
      "properties": {
        "externalId": {
          "type": "string",
          "description": "ИД модели ТС в ИС Предприятия"
        },
        "name": {
          "type": "string",
          "description": "Наименование модели ТС"
        }
      },
      "title": "ExternalModelDto"
    },
    "ExternalOrganizationDto": {
      "type": "object",
      "required": [
        "externalId",
        "name"
      ],
      "properties": {
        "externalId": {
          "type": "string",
          "description": "ИД организации в ИС предприятия"
        },
        "name": {
          "type": "string",
          "description": "Наименование организации"
        }
      },
      "title": "ExternalOrganizationDto"
    },
    "ExternalPointDto": {
      "type": "object",
      "required": [
        "address",
        "externalId",
        "name"
      ],
      "properties": {
        "coordsNotNull": {
          "type": "boolean"
        },
        "valid": {
          "type": "boolean"
        },
        "externalId": {
          "type": "string",
          "description": "ИД точки в ИС Предприятия"
        },
        "name": {
          "type": "string",
          "description": "Наименование"
        },
        "address": {
          "type": "string",
          "description": "Адрес"
        },
        "lat": {
          "type": "number",
          "description": "Широта"
        },
        "lon": {
          "type": "number",
          "description": "Долгота"
        },
        "consignee": {
          "description": "Грузополучатель",
          "$ref": "#/definitions/ExternalOrganizationDto"
        }
      },
      "title": "ExternalPointDto"
    },
    "ExternalVehicleDto": {
      "type": "object",
      "required": [
        "externalId",
        "gosNumber"
      ],
      "properties": {
        "externalId": {
          "type": "string",
          "description": "ИД ТС в ИС Предприятия"
        },
        "gosNumber": {
          "type": "string",
          "description": "Гос. номер"
        },
        "brand": {
          "description": "Марка ТС",
          "$ref": "#/definitions/ExternalBrandDto"
        },
        "model": {
          "description": "Модель ТС",
          "$ref": "#/definitions/ExternalModelDto"
        },
        "bodyVolumeInCubicMeters": {
          "type": "number",
          "format": "float",
          "description": "Объём кузова в м3"
        },
        "tonnageFactInKg": {
          "type": "number",
          "format": "float",
          "description": "Фактическая грузоподъёмность в кг"
        },
        "numberOfPallet": {
          "type": "integer",
          "format": "int32",
          "description": "Вместимость кузова в штуках"
        }
      },
      "title": "ExternalVehicleDto"
    },
    "File": {
      "type": "object",
      "properties": {
        "absolute": {
          "type": "boolean"
        },
        "absoluteFile": {
          "$ref": "#/definitions/File"
        },
        "absolutePath": {
          "type": "string"
        },
        "canonicalFile": {
          "$ref": "#/definitions/File"
        },
        "canonicalPath": {
          "type": "string"
        },
        "directory": {
          "type": "boolean"
        },
        "file": {
          "type": "boolean"
        },
        "freeSpace": {
          "type": "integer",
          "format": "int64"
        },
        "hidden": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "parentFile": {
          "$ref": "#/definitions/File"
        },
        "path": {
          "type": "string"
        },
        "totalSpace": {
          "type": "integer",
          "format": "int64"
        },
        "usableSpace": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "File"
    },
    "GeoPointDto": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "GeoPointDto"
    },
    "InputStream": {
      "type": "object",
      "title": "InputStream"
    },
    "LocationDto": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "point": {
          "$ref": "#/definitions/GeoPointDto"
        }
      },
      "title": "LocationDto"
    },
    "MultipleEntitiesSavingResponse«Точка клиента»": {
      "type": "object",
      "properties": {
        "savedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Точка клиента"
          }
        },
        "unsavedEntitiesErrors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDto"
          }
        }
      },
      "title": "MultipleEntitiesSavingResponse«Точка клиента»"
    },
    "MultipleEntitiesSavingResponse«Точка перевозчика»": {
      "type": "object",
      "properties": {
        "savedEntities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Точка перевозчика"
          }
        },
        "unsavedEntitiesErrors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDto"
          }
        }
      },
      "title": "MultipleEntitiesSavingResponse«Точка перевозчика»"
    },
    "OffsetDateTimeWithOffsetDto": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "string"
        },
        "time": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "OffsetDateTimeWithOffsetDto"
    },
    "OffsetDateTimeWithOffsetPublicDto": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "string"
        },
        "time": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "OffsetDateTimeWithOffsetPublicDto"
    },
    "OffsetIntervalDto": {
      "type": "object",
      "properties": {
        "finishTime": {
          "$ref": "#/definitions/OffsetDateTimeWithOffsetDto"
        },
        "startTime": {
          "$ref": "#/definitions/OffsetDateTimeWithOffsetDto"
        }
      },
      "title": "OffsetIntervalDto"
    },
    "OffsetIntervalPublicDto": {
      "type": "object",
      "properties": {
        "finishTime": {
          "$ref": "#/definitions/OffsetDateTimeWithOffsetPublicDto"
        },
        "startTime": {
          "$ref": "#/definitions/OffsetDateTimeWithOffsetPublicDto"
        }
      },
      "title": "OffsetIntervalPublicDto"
    },
    "PublicCardBindingRequestDto": {
      "type": "object",
      "properties": {
        "bind": {
          "type": "boolean"
        },
        "cardNumber": {
          "type": "string"
        },
        "externalGosNum": {
          "type": "string"
        },
        "externalTrId": {
          "type": "string"
        },
        "trId": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "PublicCardBindingRequestDto"
    },
    "Resource": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/File"
        },
        "filename": {
          "type": "string"
        },
        "inputStream": {
          "$ref": "#/definitions/InputStream"
        },
        "open": {
          "type": "boolean"
        },
        "readable": {
          "type": "boolean"
        },
        "uri": {
          "$ref": "#/definitions/URI"
        },
        "url": {
          "$ref": "#/definitions/URL"
        }
      },
      "title": "Resource"
    },
    "RnCardTransactionPublicDto": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "dPrice": {
          "type": "number"
        },
        "holderATMS": {
          "type": "string",
          "description": "Гос. номер ТС, к которому привязана карта по данным АТМС"
        },
        "contract": {
          "type": "string",
          "description": "Договор"
        },
        "organization": {
          "type": "string",
          "description": "Держатель договора"
        },
        "code": {
          "type": "string",
          "description": "ID операции"
        },
        "operationTime": {
          "type": "string",
          "description": "Дата операции"
        },
        "posCode": {
          "type": "string",
          "description": "Идентификатор АЗС"
        },
        "timezone": {
          "type": "string",
          "description": "Часовой пояс АЗС"
        },
        "utcTime": {
          "type": "string",
          "format": "date-time",
          "description": "Дата операции UTC"
        },
        "card": {
          "type": "string",
          "description": "ID карты"
        },
        "operationType": {
          "type": "string",
          "description": "Тип операции"
        },
        "value": {
          "type": "number",
          "description": "Объем"
        },
        "sum": {
          "type": "number",
          "description": "Сумма"
        },
        "dSum": {
          "type": "number",
          "description": "Размер скидки (Отриц - наценка, Положит - скидка)"
        },
        "price": {
          "type": "number",
          "description": "Цена"
        },
        "gCode": {
          "type": "string",
          "description": "Код услуги"
        },
        "gName": {
          "type": "string",
          "description": "Название  услуги"
        },
        "holder": {
          "type": "string",
          "description": "Держатель карты (в процессинге)"
        },
        "dtl": {
          "type": "string",
          "description": "Расшифровка (детализация) услуги"
        },
        "ref": {
          "type": "string",
          "description": "Ссылка на главную операцию"
        },
        "gCat": {
          "type": "string",
          "description": "Код категории товара"
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "Дата добавления записи"
        },
        "updateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Дата актуализации записи"
        }
      },
      "title": "RnCardTransactionPublicDto"
    },
    "RoutePointDto": {
      "type": "object",
      "required": [
        "operation",
        "point",
        "startTime"
      ],
      "properties": {
        "point": {
          "description": "Точка маршрута рейса",
          "$ref": "#/definitions/ExternalPointDto"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Плановые дата и время подачи ТС на погрузку/разгрузку (UTC)"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "Плановые дата и время убытия из точки маршрута (UTC)"
        },
        "operation": {
          "type": "string",
          "description": "Тип операции в точке",
          "enum": [
            "LOAD",
            "UNLOAD",
            "LOAD_AND_UNLOAD",
            "VISIT",
            "REFUELLING"
          ]
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Порядковый номер в точки рейсе "
        },
        "orderList": {
          "type": "array",
          "description": "Список номеров заказов",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "RoutePointDto"
    },
    "RouteWithDictionaryDto": {
      "type": "object",
      "required": [
        "carrier",
        "externalId",
        "points",
        "tech",
        "vehicle"
      ],
      "properties": {
        "baseCostInRubles": {
          "type": "number",
          "format": "double",
          "description": "Базовая стоимость перевозки согласно тарифам"
        },
        "bodyTonnageInKg": {
          "type": "number",
          "format": "float"
        },
        "bodyVolumeInCubicMeters": {
          "type": "number",
          "format": "float"
        },
        "completeOnLastPoint": {
          "type": "boolean",
          "example": false,
          "description": "Завершить рейс по въезду в последнюю точку"
        },
        "distanceInMeters": {
          "type": "number",
          "format": "double",
          "description": "Дистанция в метрах"
        },
        "numberOfPallets": {
          "type": "integer",
          "format": "int32"
        },
        "qrCode": {
          "type": "string",
          "description": "QR код рейса"
        },
        "routingListNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Номер маршрутного листа"
        },
        "routingService": {
          "type": "boolean",
          "example": false,
          "description": "Рейс получен из сервиса маршрутизации"
        },
        "secondRoute": {
          "type": "boolean",
          "description": "Второй рейс"
        },
        "zoneNum": {
          "type": "integer",
          "format": "int32",
          "description": "Зона"
        },
        "externalId": {
          "type": "string",
          "description": "ИД рейса в ИС Предприятия"
        },
        "routeNum": {
          "type": "string",
          "description": "Номер рейса"
        },
        "customer": {
          "description": "Клиент (Заказчик)",
          "$ref": "#/definitions/ExternalOrganizationDto"
        },
        "carrier": {
          "description": "Перевозчик",
          "$ref": "#/definitions/ExternalOrganizationDto"
        },
        "costInRubles": {
          "type": "number",
          "description": "Стоимость выполнения рейса"
        },
        "factCostInRubles": {
          "type": "number",
          "description": "Фактическая Стоимость выполнения рейса"
        },
        "comment": {
          "type": "string",
          "description": "Комментарий к рейсу"
        },
        "temperatureMin": {
          "type": "number",
          "description": "Минимальная температура перевозки в 1-м отсеке"
        },
        "temperatureMax": {
          "type": "number",
          "description": "Максимальная температура перевозки в 1-м отсеке"
        },
        "secondChamberTemperatureMin": {
          "type": "number",
          "description": "Минимальная температура перевозки во 2-м отсеке"
        },
        "secondChamberTemperatureMax": {
          "type": "number",
          "description": "Максимальная температура перевозки во 2-м отсеке"
        },
        "tech": {
          "type": "boolean",
          "description": "Признак технологического рейса"
        },
        "vehicle": {
          "description": "Транспортное средство (единичное/головное ТС)",
          "$ref": "#/definitions/ExternalVehicleDto"
        },
        "trailer": {
          "description": "Прицеп",
          "$ref": "#/definitions/ExternalVehicleDto"
        },
        "driver": {
          "description": "Водитель",
          "$ref": "#/definitions/ExternalDriverDto"
        },
        "points": {
          "type": "array",
          "description": "Маршрут рейса",
          "items": {
            "$ref": "#/definitions/RoutePointDto"
          }
        }
      },
      "title": "RouteWithDictionaryDto"
    },
    "SaveShipmentCharacteristicsCommandPublicDto": {
      "type": "object",
      "properties": {
        "acceptableTemperatureDeviation": {
          "type": "number",
          "format": "float"
        },
        "bodyTonnageInKg": {
          "type": "number",
          "format": "float"
        },
        "bodyType": {
          "type": "string",
          "enum": [
            "AWNING",
            "REF",
            "ISO",
            "BT",
            "TRANSPORTER",
            "ONBOARD",
            "CONTAINER",
            "PLATFORM",
            "MANUFACTURE",
            "DUMP",
            "TRAWL",
            "ALL_METAL",
            "CISTERN",
            "SEDAN",
            "MINIVAN",
            "BUS",
            "ISOTERM",
            "REF_MULTI",
            "AWNING_CMR",
            "ONBOARD_CMR",
            "CEMENT"
          ]
        },
        "bodyVolumeInCubicMeters": {
          "type": "number",
          "format": "float"
        },
        "carrierDivisionExternalId": {
          "type": "string"
        },
        "carrierOrganizationExternalId": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "completeOnLastPoint": {
          "type": "boolean"
        },
        "costInRubles": {
          "type": "number"
        },
        "numberOfPallets": {
          "type": "integer",
          "format": "int32"
        },
        "qrCode": {
          "type": "string"
        },
        "routeNum": {
          "type": "string"
        },
        "secondChamberAcceptableTemperatureDeviation": {
          "type": "number",
          "format": "float"
        },
        "secondChamberTemperatureMax": {
          "type": "number",
          "format": "float"
        },
        "secondChamberTemperatureMin": {
          "type": "number",
          "format": "float"
        },
        "secondRoute": {
          "type": "boolean"
        },
        "speedModeTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "temperatureMax": {
          "type": "number",
          "format": "float"
        },
        "temperatureMin": {
          "type": "number",
          "format": "float"
        },
        "trailerExternalId": {
          "type": "string"
        },
        "zoneNum": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "SaveShipmentCharacteristicsCommandPublicDto"
    },
    "SaveShipmentStatePointCommandPublicDto": {
      "type": "object",
      "required": [
        "customerPointExternalId",
        "offsetInterval",
        "operations"
      ],
      "properties": {
        "customerPointExternalId": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "offsetInterval": {
          "$ref": "#/definitions/OffsetIntervalPublicDto"
        },
        "operations": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "LOAD",
              "UNLOAD",
              "LOAD_AND_UNLOAD",
              "VISIT",
              "REFUELLING"
            ]
          }
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "SaveShipmentStatePointCommandPublicDto"
    },
    "ShipmentApprovalDto": {
      "type": "object",
      "properties": {
        "approverFullName": {
          "type": "string"
        },
        "approverLogin": {
          "type": "string"
        },
        "time": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "ShipmentApprovalDto"
    },
    "ShipmentCancellationRecordDto": {
      "type": "object",
      "properties": {
        "cancelationReasonId": {
          "type": "integer",
          "format": "int32",
          "description": "ID причины отмены рейса"
        },
        "comment": {
          "type": "string",
          "description": "Комментарий пользователя при отмене рейса"
        },
        "description": {
          "type": "string",
          "description": "Описание типа причины"
        },
        "name": {
          "type": "string",
          "description": "Тип причины отмены"
        }
      },
      "title": "ShipmentCancellationRecordDto"
    },
    "ShipmentFileDto": {
      "type": "object",
      "properties": {
        "fileId": {
          "type": "string",
          "description": "Идентификатор файла (UUID)"
        },
        "filename": {
          "type": "string",
          "description": "Наименование файла"
        },
        "addedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Добавлен (Дата) – дата и время добавления файла"
        },
        "addedByFullName": {
          "type": "string",
          "description": "Добавлен (ФИО)"
        },
        "addedByLogin": {
          "type": "string",
          "description": "Добавлен (Логин)"
        }
      },
      "title": "ShipmentFileDto"
    },
    "ShipmentFileWebDto": {
      "type": "object",
      "properties": {
        "fileId": {
          "type": "string",
          "description": "Идентификатор файла (UUID)"
        },
        "filename": {
          "type": "string",
          "description": "Наименование файла"
        },
        "addedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Добавлен (Дата) – дата и время добавления файла"
        },
        "addedByFullName": {
          "type": "string",
          "description": "Добавлен (ФИО)"
        },
        "addedByLogin": {
          "type": "string",
          "description": "Добавлен (Логин)"
        },
        "deletedDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Удален (Дата) – дата и время удаления файла"
        },
        "deletedByFullName": {
          "type": "string",
          "description": "Удален (ФИО)"
        },
        "deletedByLogin": {
          "type": "string",
          "description": "Удален (Логин)"
        }
      },
      "title": "ShipmentFileWebDto"
    },
    "ShipmentRequestPointDto": {
      "type": "object",
      "required": [
        "customerPointId",
        "interval",
        "location",
        "operation"
      ],
      "properties": {
        "comment": {
          "type": "string"
        },
        "customerPointId": {
          "type": "integer",
          "format": "int64"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShipmentRequestPointTransportDocumentDto"
          }
        },
        "finishTime": {
          "type": "string",
          "format": "date-time"
        },
        "finishTimeOffSet": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Не заполняется при создании нового шаблона маршрута"
        },
        "interval": {
          "$ref": "#/definitions/OffsetIntervalDto"
        },
        "location": {
          "$ref": "#/definitions/LocationDto"
        },
        "operation": {
          "type": "string",
          "enum": [
            "LOAD",
            "UNLOAD",
            "LOAD_AND_UNLOAD",
            "VISIT",
            "REFUELLING"
          ]
        },
        "orderList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "startTimeOffset": {
          "type": "string"
        }
      },
      "title": "ShipmentRequestPointDto"
    },
    "ShipmentRequestPointTransportDocumentDto": {
      "type": "object",
      "properties": {
        "changeDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "changedByLogin": {
          "type": "string"
        },
        "changedByUserId": {
          "type": "integer",
          "format": "int32"
        },
        "comment": {
          "type": "string"
        },
        "createDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "number": {
          "type": "string"
        },
        "positions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShipmentRequestPointTransportDocumentPositionDto"
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "NOT_ACCEPTED",
            "ACCEPTED",
            "PARTIALLY_ACCEPTED"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "TRANSPORT_NAKL",
            "TOVAR_TRANSPORT_NAKL",
            "INVOICE",
            "UNIVERSAL_TRANSFER_DOCUMENT"
          ]
        }
      },
      "title": "ShipmentRequestPointTransportDocumentDto"
    },
    "ShipmentRequestPointTransportDocumentPositionDto": {
      "type": "object",
      "properties": {
        "acceptedQuantity": {
          "type": "integer",
          "format": "int32"
        },
        "changeDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "changedByLogin": {
          "type": "string"
        },
        "changedByUserId": {
          "type": "integer",
          "format": "int32"
        },
        "comment": {
          "type": "string"
        },
        "createDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "measureUnits": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string",
          "enum": [
            "NOT_ACCEPTED",
            "ACCEPTED",
            "PARTIALLY_ACCEPTED"
          ]
        },
        "totalQuantity": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ShipmentRequestPointTransportDocumentPositionDto"
    },
    "ShipmentRequestStatusChangeRequestDto": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "NEW",
            "REVIEW",
            "PROCESSING",
            "ROUTES",
            "ACCEPTED",
            "EXECUTING",
            "EXECUTED",
            "ERROR",
            "REJ_CUST",
            "REJECTED",
            "FREE"
          ]
        },
        "statusChangeReason": {
          "type": "string"
        }
      },
      "title": "ShipmentRequestStatusChangeRequestDto"
    },
    "ShipmentStatePointDto": {
      "type": "object",
      "required": [
        "customerPointId",
        "lat",
        "locationAddress",
        "locationName",
        "lon",
        "offset",
        "operations"
      ],
      "properties": {
        "customerPointExternalId": {
          "type": "string",
          "description": "Внешний Id точки клиента"
        },
        "customerPointId": {
          "type": "integer",
          "format": "int64"
        },
        "dispatcherFinishTime": {
          "type": "string",
          "format": "date-time"
        },
        "dispatcherStartTime": {
          "type": "string",
          "format": "date-time"
        },
        "documents": {
          "type": "array",
          "description": "Транспортные документы",
          "items": {
            "$ref": "#/definitions/TransportDocumentDto"
          }
        },
        "driverFinishTime": {
          "type": "string",
          "format": "date-time"
        },
        "driverStartTime": {
          "type": "string",
          "format": "date-time"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "Время окончания"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lat": {
          "type": "number",
          "format": "double"
        },
        "localFinishTime": {
          "type": "string",
          "format": "date-time",
          "description": "Время окончания"
        },
        "localFinishTimeOffset": {
          "type": "string",
          "description": "Время окончания"
        },
        "localStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Время начала"
        },
        "localStartTimeOffset": {
          "type": "string",
          "description": "Время начала"
        },
        "locationAddress": {
          "type": "string"
        },
        "locationName": {
          "type": "string"
        },
        "lon": {
          "type": "number",
          "format": "double"
        },
        "offset": {
          "type": "string"
        },
        "operations": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "LOAD",
              "UNLOAD",
              "LOAD_AND_UNLOAD",
              "VISIT",
              "REFUELLING"
            ]
          }
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Время начала"
        },
        "tag": {
          "type": "string",
          "enum": [
            "NOT_PASSED_YET",
            "ON_POINT",
            "OK",
            "NEAR",
            "FAIL"
          ]
        },
        "telematicsFinishTime": {
          "type": "string",
          "format": "date-time"
        },
        "telematicsStartTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "ShipmentStatePointDto"
    },
    "TaskDto2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "taskType": {
          "type": "string"
        }
      },
      "title": "TaskDto2"
    },
    "TemperatureAndDoorSensorValuesDto": {
      "type": "object",
      "properties": {
        "doorSensor": {
          "type": "array",
          "description": "Датчики двери",
          "items": {
            "$ref": "#/definitions/Датчик дверей"
          }
        },
        "gosnum": {
          "type": "string",
          "description": "Гос.номер ТС"
        },
        "temperatureSensors": {
          "type": "array",
          "description": "Датчики температуры",
          "items": {
            "$ref": "#/definitions/Датчик температуры"
          }
        }
      },
      "title": "TemperatureAndDoorSensorValuesDto"
    },
    "TransportDocumentDto": {
      "type": "object",
      "properties": {
        "changeDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "changedByLogin": {
          "type": "string"
        },
        "changedByUserId": {
          "type": "integer",
          "format": "int32"
        },
        "comment": {
          "type": "string"
        },
        "createDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "number": {
          "type": "string"
        },
        "positions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransportDocumentPositionDto"
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "NOT_ACCEPTED",
            "ACCEPTED",
            "PARTIALLY_ACCEPTED"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "TRANSPORT_NAKL",
            "TOVAR_TRANSPORT_NAKL",
            "INVOICE",
            "UNIVERSAL_TRANSFER_DOCUMENT"
          ]
        }
      },
      "title": "TransportDocumentDto"
    },
    "TransportDocumentPositionDto": {
      "type": "object",
      "properties": {
        "acceptedQuantity": {
          "type": "integer",
          "format": "int32"
        },
        "changeDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "changedByLogin": {
          "type": "string"
        },
        "changedByUserId": {
          "type": "integer",
          "format": "int32"
        },
        "comment": {
          "type": "string"
        },
        "createDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "measureUnits": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string",
          "enum": [
            "NOT_ACCEPTED",
            "ACCEPTED",
            "PARTIALLY_ACCEPTED"
          ]
        },
        "totalQuantity": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "TransportDocumentPositionDto"
    },
    "URI": {
      "type": "object",
      "properties": {
        "absolute": {
          "type": "boolean"
        },
        "authority": {
          "type": "string"
        },
        "fragment": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "opaque": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "query": {
          "type": "string"
        },
        "rawAuthority": {
          "type": "string"
        },
        "rawFragment": {
          "type": "string"
        },
        "rawPath": {
          "type": "string"
        },
        "rawQuery": {
          "type": "string"
        },
        "rawSchemeSpecificPart": {
          "type": "string"
        },
        "rawUserInfo": {
          "type": "string"
        },
        "scheme": {
          "type": "string"
        },
        "schemeSpecificPart": {
          "type": "string"
        },
        "userInfo": {
          "type": "string"
        }
      },
      "title": "URI"
    },
    "URL": {
      "type": "object",
      "properties": {
        "authority": {
          "type": "string"
        },
        "content": {
          "type": "object"
        },
        "defaultPort": {
          "type": "integer",
          "format": "int32"
        },
        "file": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "userInfo": {
          "type": "string"
        }
      },
      "title": "URL"
    },
    "VehicleDocumentFileDto": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "fileName": {
          "type": "string"
        },
        "fileType": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "path": {
          "type": "string"
        }
      },
      "title": "VehicleDocumentFileDto"
    },
    "Водитель": {
      "type": "object",
      "required": [
        "carrierDivisionId",
        "firstName",
        "fullName",
        "lastName",
        "organizationId"
      ],
      "properties": {
        "active": {
          "type": "boolean",
          "description": "Признак активности водителя"
        },
        "address": {
          "type": "string",
          "description": "Адрес"
        },
        "carrierDivisionId": {
          "type": "integer",
          "format": "int32",
          "description": "ID дивизиона"
        },
        "externalId": {
          "type": "string",
          "description": "Внешний ID"
        },
        "firingDate": {
          "type": "string",
          "format": "date",
          "description": "Дата увольнения"
        },
        "firstName": {
          "type": "string",
          "description": "Имя"
        },
        "fullName": {
          "type": "string",
          "description": "ФИО"
        },
        "hiringDate": {
          "type": "string",
          "format": "date",
          "description": "Дата найма"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор"
        },
        "kind": {
          "type": "string",
          "description": "Вид водителя",
          "enum": [
            "FOREIGN",
            "OWN"
          ]
        },
        "lastName": {
          "type": "string",
          "description": "Фамилия"
        },
        "middleName": {
          "type": "string",
          "description": "Отчество"
        },
        "organizationId": {
          "type": "integer",
          "format": "int32",
          "description": "Организация"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Номер телефона"
        }
      },
      "title": "Водитель"
    },
    "График недоступности ТС": {
      "type": "object",
      "required": [
        "carrierId",
        "carrierPointId",
        "finishTime",
        "startTime",
        "type",
        "vehicleId"
      ],
      "properties": {
        "address": {
          "type": "string",
          "description": "Адрес"
        },
        "carrierId": {
          "type": "integer",
          "format": "int32",
          "description": "ID перевозчика"
        },
        "carrierPointId": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор точки перевозчика"
        },
        "externalId": {
          "type": "string",
          "description": "Внешний ID"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "Время окончания"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lat": {
          "type": "number",
          "format": "double",
          "description": "Широта"
        },
        "lon": {
          "type": "number",
          "format": "double",
          "description": "Долгота"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Время начала"
        },
        "type": {
          "type": "string",
          "description": "Тип графика недоступности",
          "enum": [
            "UNPLANNED_MAINTENANCE",
            "PLANNED_MAINTENANCE",
            "PLANNED_REPAIR",
            "UNPLANNED_REPAIR",
            "SHIFT_CHANGE",
            "IDLE"
          ]
        },
        "vehicleId": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор ТС"
        }
      },
      "title": "График недоступности ТС"
    },
    "Датчик дверей": {
      "type": "object",
      "properties": {
        "doorEvent": {
          "type": "string"
        },
        "timeFrom": {
          "type": "string",
          "format": "date-time"
        },
        "timeTo": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Датчик дверей"
    },
    "Датчик температуры": {
      "type": "object",
      "properties": {
        "lat": {
          "type": "number",
          "format": "float",
          "description": "Широта"
        },
        "lon": {
          "type": "number",
          "format": "float",
          "description": "Долгота"
        },
        "section": {
          "type": "integer",
          "format": "int32",
          "description": "Номер отсека, в котором расположен датчик"
        },
        "sensorNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Номер датчика"
        },
        "serialNumber": {
          "type": "string",
          "description": "Серийный номер датчика"
        },
        "temperatureValue": {
          "type": "number",
          "format": "float",
          "description": "Показание датчика в градусах"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Время генерации события"
        }
      },
      "title": "Датчик температуры"
    },
    "Документ водителя": {
      "type": "object",
      "required": [
        "expirationDate",
        "issuedBy",
        "issuedDate",
        "number",
        "type"
      ],
      "properties": {
        "active": {
          "type": "boolean",
          "description": "Активность"
        },
        "customerId": {
          "type": "integer",
          "format": "int32"
        },
        "documentTypeName": {
          "type": "string",
          "description": "Наименование типа документа"
        },
        "driverId": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор водителя"
        },
        "expirationDate": {
          "type": "string",
          "format": "date",
          "description": "Дата окончания"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор"
        },
        "issuedBy": {
          "type": "string",
          "description": "Кем выдан"
        },
        "issuedDate": {
          "type": "string",
          "format": "date",
          "description": "Дата выдачи"
        },
        "number": {
          "type": "string",
          "description": "Номер"
        },
        "registrationAddress": {
          "type": "string",
          "description": "Адрес регистрации"
        },
        "status": {
          "type": "string",
          "enum": [
            "NOT_AGREED",
            "ON_REVIEW",
            "AGREED"
          ]
        },
        "type": {
          "type": "string",
          "description": "Тип документа",
          "enum": [
            "PASSPORT",
            "DRIVERS_LICENCE",
            "WORK_PERMIT"
          ]
        }
      },
      "title": "Документ водителя"
    },
    "Документ водителя с вложениями": {
      "type": "object",
      "required": [
        "expirationDate",
        "issuedBy",
        "issuedDate",
        "number",
        "type"
      ],
      "properties": {
        "active": {
          "type": "boolean",
          "description": "Активность"
        },
        "attachments": {
          "type": "array",
          "description": "Прикрепленные файлы",
          "items": {
            "$ref": "#/definitions/ShipmentFileDto"
          }
        },
        "documentTypeName": {
          "type": "string",
          "description": "Наименование типа документа"
        },
        "driverId": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор водителя"
        },
        "expirationDate": {
          "type": "string",
          "format": "date",
          "description": "Дата окончания"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор"
        },
        "issuedBy": {
          "type": "string",
          "description": "Кем выдан"
        },
        "issuedDate": {
          "type": "string",
          "format": "date",
          "description": "Дата выдачи"
        },
        "number": {
          "type": "string",
          "description": "Номер"
        },
        "registrationAddress": {
          "type": "string",
          "description": "Адрес регистрации"
        },
        "type": {
          "type": "string",
          "description": "Тип документа",
          "enum": [
            "PASSPORT",
            "DRIVERS_LICENCE",
            "WORK_PERMIT"
          ]
        }
      },
      "title": "Документ водителя с вложениями"
    },
    "Документы ТС": {
      "type": "object",
      "required": [
        "expirationDate",
        "issuedBy",
        "issuedDate",
        "number",
        "type"
      ],
      "properties": {
        "documentTypeName": {
          "type": "string",
          "description": "Наименование типа документа"
        },
        "expirationDate": {
          "type": "string",
          "format": "date",
          "description": "Дата окончания"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор"
        },
        "issuedBy": {
          "type": "string",
          "description": "Кем выдан"
        },
        "issuedDate": {
          "type": "string",
          "format": "date",
          "description": "Дата выдачи"
        },
        "number": {
          "type": "string",
          "description": "Номер"
        },
        "type": {
          "type": "string",
          "description": "Тип документа",
          "enum": [
            "PTS",
            "STS"
          ]
        },
        "vehicleId": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор ТС"
        }
      },
      "title": "Документы ТС"
    },
    "Документы ТС с вложениями": {
      "type": "object",
      "required": [
        "expirationDate",
        "issuedBy",
        "issuedDate",
        "number",
        "type"
      ],
      "properties": {
        "attachments": {
          "type": "array",
          "description": "Прикрепленные файлы",
          "items": {
            "$ref": "#/definitions/ShipmentFileDto"
          }
        },
        "documentTypeName": {
          "type": "string",
          "description": "Наименование типа документа"
        },
        "expirationDate": {
          "type": "string",
          "format": "date",
          "description": "Дата окончания"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор"
        },
        "issuedBy": {
          "type": "string",
          "description": "Кем выдан"
        },
        "issuedDate": {
          "type": "string",
          "format": "date",
          "description": "Дата выдачи"
        },
        "number": {
          "type": "string",
          "description": "Номер"
        },
        "type": {
          "type": "string",
          "description": "Тип документа",
          "enum": [
            "PTS",
            "STS"
          ]
        },
        "vehicleId": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор ТС"
        }
      },
      "title": "Документы ТС с вложениями"
    },
    "Заказчик перевозок": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "carrierId": {
          "type": "integer",
          "format": "int32",
          "description": "ID перевозчика"
        },
        "externalId": {
          "type": "string",
          "description": "Внешний ID"
        },
        "fixedRoute": {
          "type": "boolean",
          "description": "Использование только фиксированных маршрутов"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор"
        },
        "name": {
          "type": "string",
          "description": "Наименование"
        }
      },
      "title": "Заказчик перевозок"
    },
    "Заявка на перевозку": {
      "type": "object",
      "required": [
        "appliedRules",
        "bodyType",
        "confirmationSent",
        "customerId",
        "date",
        "externalId",
        "finishTime",
        "points",
        "startTime",
        "status",
        "tailLift"
      ],
      "properties": {
        "appliedRules": {
          "type": "array",
          "description": "Примененные правила",
          "items": {
            "type": "string"
          }
        },
        "baseCostInRubles": {
          "type": "number",
          "format": "double",
          "description": "Базовая стоимость перевозки согласно тарифам"
        },
        "bodyTonnageInKg": {
          "type": "number",
          "format": "float",
          "description": "Грузоподъемность, кг"
        },
        "bodyType": {
          "type": "string",
          "description": "Тип кузова. Допустимые значения: AWNING:Тент, REF:Рефрижератор, ISO:Изотерм, BT:Рефрижератор мультирежим, TRANSPORTER:Автовоз, ONBOARD:Бортовой, CONTAINER:Контейнеровоз, PLATFORM:Платформа, MANUFACTURE:Промтоварный, DUMP:Самосвал, TRAWL:Трал, ALL_METAL:Цельнометаллический, CISTERN:Цистерна",
          "enum": [
            "AWNING",
            "REF",
            "ISO",
            "BT",
            "TRANSPORTER",
            "ONBOARD",
            "CONTAINER",
            "PLATFORM",
            "MANUFACTURE",
            "DUMP",
            "TRAWL",
            "ALL_METAL",
            "CISTERN",
            "SEDAN",
            "MINIVAN",
            "BUS",
            "ISOTERM",
            "REF_MULTI",
            "AWNING_CMR",
            "ONBOARD_CMR",
            "CEMENT"
          ]
        },
        "bodyVolumeInCubicMeters": {
          "type": "number",
          "format": "float",
          "description": "Объем кузова, м3"
        },
        "carrierOrganizationId": {
          "type": "integer",
          "format": "int32",
          "description": "ID организации перевозчика"
        },
        "comment": {
          "type": "string",
          "description": "Комментарий"
        },
        "commercialTypeId": {
          "type": "integer",
          "format": "int32",
          "description": "Id типа коммерческого рейса"
        },
        "commercialTypeName": {
          "type": "string",
          "description": "Наименование типа коммерческого рейса"
        },
        "completeOnLastPoint": {
          "type": "boolean",
          "example": false,
          "description": "Завершить рейс по въезду в последнюю точку"
        },
        "confirmationSent": {
          "type": "boolean",
          "description": "Признак отправки подтверждения"
        },
        "costInRubles": {
          "type": "number",
          "description": "Стоимость, ₽"
        },
        "createType": {
          "type": "string",
          "example": "PUBLIC_API",
          "description": "Способ создания (возможные значения: PUBLIC_API / не указывать)",
          "enum": [
            "MANUAL",
            "COPY",
            "IMPORT_FROM_FILE",
            "PUBLIC_API",
            "AUTO",
            "ROUTING_SERVICE",
            "PARUS_API"
          ]
        },
        "createdBy": {
          "description": "Информация о пользователе, который созадл заявку",
          "$ref": "#/definitions/Информация о пользователе системы"
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Дата создания"
        },
        "customerId": {
          "type": "integer",
          "format": "int32",
          "description": "ID организации заказчика"
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "Дата"
        },
        "distanceInMeters": {
          "type": "number",
          "format": "double",
          "description": "Дистанция в метрах"
        },
        "externalId": {
          "type": "string",
          "description": "Внешний ID"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "Время окончания"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор. Для редактирования заявки параметр обязательный"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time",
          "description": "Дата последней модификации"
        },
        "numberOfPallets": {
          "type": "integer",
          "format": "int32",
          "description": "Количество паллет"
        },
        "points": {
          "type": "array",
          "description": "Точки",
          "items": {
            "$ref": "#/definitions/Точка заявки"
          }
        },
        "routeTemplateId": {
          "type": "integer",
          "format": "int32",
          "description": "Id шаблона маршрута"
        },
        "routingListNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Номер маршрутного листа"
        },
        "shipmentId": {
          "type": "integer",
          "format": "int64",
          "description": "ID рейса созданного на основе данной заявки"
        },
        "speedModeTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Время начала"
        },
        "status": {
          "type": "string",
          "description": "Статус",
          "enum": [
            "NEW",
            "REVIEW",
            "PROCESSING",
            "ROUTES",
            "ACCEPTED",
            "EXECUTING",
            "EXECUTED",
            "ERROR",
            "REJ_CUST",
            "REJECTED",
            "FREE"
          ]
        },
        "tailLift": {
          "type": "boolean",
          "description": "Наличие подъемного механизма"
        },
        "tech": {
          "type": "boolean",
          "description": "Признак технологического рейса"
        },
        "techReasonId": {
          "type": "integer",
          "format": "int32",
          "description": "Id основания для технологического рейса"
        },
        "techReasonName": {
          "type": "string",
          "description": "Наименование основания для технологического рейса"
        },
        "temperatureMax": {
          "type": "number",
          "format": "float",
          "description": "Максимальная температура"
        },
        "temperatureMin": {
          "type": "number",
          "format": "float",
          "description": "Минимальная температура"
        }
      },
      "title": "Заявка на перевозку"
    },
    "Заявка на перевозку с обновлением справочников": {
      "type": "object",
      "required": [
        "appliedRules",
        "bodyType",
        "confirmationSent",
        "date",
        "externalId",
        "finishTime",
        "points",
        "startTime",
        "status",
        "tailLift"
      ],
      "properties": {
        "appliedRules": {
          "type": "array",
          "description": "Примененные правила",
          "items": {
            "type": "string"
          }
        },
        "baseCostInRubles": {
          "type": "number",
          "format": "double",
          "description": "Базовая стоимость перевозки согласно тарифам"
        },
        "bodyTonnageInKg": {
          "type": "number",
          "format": "float",
          "description": "Грузоподъемность, кг"
        },
        "bodyType": {
          "type": "string",
          "description": "Тип кузова. Допустимые значения: AWNING:Тент, REF:Рефрижератор, ISO:Изотерм, BT:Рефрижератор мультирежим, TRANSPORTER:Автовоз, ONBOARD:Бортовой, CONTAINER:Контейнеровоз, PLATFORM:Платформа, MANUFACTURE:Промтоварный, DUMP:Самосвал, TRAWL:Трал, ALL_METAL:Цельнометаллический, CISTERN:Цистерна",
          "enum": [
            "AWNING",
            "REF",
            "ISO",
            "BT",
            "TRANSPORTER",
            "ONBOARD",
            "CONTAINER",
            "PLATFORM",
            "MANUFACTURE",
            "DUMP",
            "TRAWL",
            "ALL_METAL",
            "CISTERN",
            "SEDAN",
            "MINIVAN",
            "BUS",
            "ISOTERM",
            "REF_MULTI",
            "AWNING_CMR",
            "ONBOARD_CMR",
            "CEMENT"
          ]
        },
        "bodyVolumeInCubicMeters": {
          "type": "number",
          "format": "float",
          "description": "Объем кузова, м3"
        },
        "carrier": {
          "description": "Перевозчик",
          "$ref": "#/definitions/ExternalOrganizationDto"
        },
        "comment": {
          "type": "string",
          "description": "Комментарий"
        },
        "commercialTypeId": {
          "type": "integer",
          "format": "int32",
          "description": "Id типа коммерческого рейса"
        },
        "commercialTypeName": {
          "type": "string",
          "description": "Наименование типа коммерческого рейса"
        },
        "completeOnLastPoint": {
          "type": "boolean",
          "example": false,
          "description": "Завершить рейс по въезду в последнюю точку"
        },
        "confirmationSent": {
          "type": "boolean",
          "description": "Признак отправки подтверждения"
        },
        "costInRubles": {
          "type": "number",
          "description": "Стоимость, ₽"
        },
        "createType": {
          "type": "string",
          "example": "PUBLIC_API",
          "description": "Способ создания (возможные значения: PUBLIC_API / не указывать)",
          "enum": [
            "MANUAL",
            "COPY",
            "IMPORT_FROM_FILE",
            "PUBLIC_API",
            "AUTO",
            "ROUTING_SERVICE",
            "PARUS_API"
          ]
        },
        "createdBy": {
          "description": "Информация о пользователе, который создал заявку",
          "$ref": "#/definitions/Информация о пользователе системы"
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Дата создания"
        },
        "customer": {
          "description": "Клиент (Заказчик)",
          "$ref": "#/definitions/ExternalOrganizationDto"
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "Дата"
        },
        "distanceInMeters": {
          "type": "number",
          "format": "double",
          "description": "Дистанция в метрах"
        },
        "externalId": {
          "type": "string",
          "description": "Внешний ID"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "Время окончания"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор. Для редактирования заявки параметр обязательный"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time",
          "description": "Дата последней модификации"
        },
        "numberOfPallets": {
          "type": "integer",
          "format": "int32",
          "description": "Количество паллет"
        },
        "points": {
          "type": "array",
          "description": "Точки",
          "items": {
            "$ref": "#/definitions/RoutePointDto"
          }
        },
        "routeTemplateId": {
          "type": "integer",
          "format": "int32",
          "description": "Id шаблона маршрута"
        },
        "routingListNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Номер маршрутного листа"
        },
        "routingService": {
          "type": "boolean",
          "example": false,
          "description": "Заявка получена из сервиса маршрутизации"
        },
        "shipmentId": {
          "type": "integer",
          "format": "int64",
          "description": "ID рейса созданного на основе данной заявки"
        },
        "speedModeTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Время начала"
        },
        "status": {
          "type": "string",
          "description": "Статус",
          "enum": [
            "NEW",
            "REVIEW",
            "PROCESSING",
            "ROUTES",
            "ACCEPTED",
            "EXECUTING",
            "EXECUTED",
            "ERROR",
            "REJ_CUST",
            "REJECTED",
            "FREE"
          ]
        },
        "tailLift": {
          "type": "boolean",
          "description": "Наличие подъемного механизма"
        },
        "tech": {
          "type": "boolean",
          "description": "Признак технологического рейса"
        },
        "techReasonId": {
          "type": "integer",
          "format": "int32",
          "description": "Id основания для технологического рейса"
        },
        "techReasonName": {
          "type": "string",
          "description": "Наименование основания для технологического рейса"
        },
        "temperatureMax": {
          "type": "number",
          "format": "float",
          "description": "Максимальная температура"
        },
        "temperatureMin": {
          "type": "number",
          "format": "float",
          "description": "Минимальная температура"
        }
      },
      "title": "Заявка на перевозку с обновлением справочников"
    },
    "Заявка на перевозку с созданием рейса": {
      "type": "object",
      "required": [
        "carrierOrganizationExternalId",
        "date",
        "driverExternalId",
        "externalId",
        "points",
        "status",
        "vehicleExternalId"
      ],
      "properties": {
        "carrierOrganizationExternalId": {
          "type": "string",
          "description": "Внешний ID организации"
        },
        "comment": {
          "type": "string",
          "description": "Комментарий"
        },
        "commercialTypeId": {
          "type": "integer",
          "format": "int32",
          "description": "Id типа коммерческого рейса"
        },
        "commercialTypeName": {
          "type": "string",
          "description": "Наименование типа коммерческого рейса"
        },
        "completeOnLastPoint": {
          "type": "boolean",
          "example": false,
          "description": "Завершить рейс по въезду в последнюю точку"
        },
        "costInRubles": {
          "type": "number",
          "description": "Стоимость, ₽"
        },
        "createType": {
          "type": "string",
          "example": "PUBLIC_API",
          "description": "Способ создания (возможные значения: PUBLIC_API / не указывать)",
          "enum": [
            "MANUAL",
            "COPY",
            "IMPORT_FROM_FILE",
            "PUBLIC_API",
            "AUTO",
            "ROUTING_SERVICE",
            "PARUS_API"
          ]
        },
        "createdBy": {
          "description": "Информация о пользователе, который созадл заявку",
          "$ref": "#/definitions/Информация о пользователе системы"
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Дата создания"
        },
        "customerExternalId": {
          "type": "string",
          "description": "Внешний ID заказчика"
        },
        "customerId": {
          "type": "integer",
          "format": "int32",
          "description": "ID заказчика"
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "Дата"
        },
        "distanceInMeters": {
          "type": "number",
          "format": "double",
          "description": "Дистанция в метрах"
        },
        "driverExternalId": {
          "type": "string",
          "description": "Внешний ID водителя"
        },
        "externalId": {
          "type": "string",
          "description": "Внешний ID"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор. Для редактирования заявки параметр обязательный"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time",
          "description": "Дата последней модификации"
        },
        "points": {
          "type": "array",
          "description": "Точки",
          "items": {
            "$ref": "#/definitions/Точка заявки"
          }
        },
        "qrCode": {
          "type": "string",
          "description": "QR код рейса"
        },
        "routeNum": {
          "type": "string"
        },
        "routeTemplateId": {
          "type": "integer",
          "format": "int32",
          "description": "Id шаблона маршрута"
        },
        "shipmentId": {
          "type": "integer",
          "format": "int64",
          "description": "ID рейса созданного на основе данной заявки"
        },
        "status": {
          "type": "string",
          "description": "Статус",
          "enum": [
            "NEW",
            "REVIEW",
            "PROCESSING",
            "ROUTES",
            "ACCEPTED",
            "EXECUTING",
            "EXECUTED",
            "ERROR",
            "REJ_CUST",
            "REJECTED",
            "FREE"
          ]
        },
        "tailLift": {
          "type": "boolean",
          "description": "Наличие подъемного механизма"
        },
        "tech": {
          "type": "boolean",
          "description": "Признак технологического рейса"
        },
        "techReasonId": {
          "type": "integer",
          "format": "int32",
          "description": "Id основания для технологического рейса"
        },
        "techReasonName": {
          "type": "string",
          "description": "Наименование основания для технологического рейса"
        },
        "temperatureMax": {
          "type": "number",
          "format": "float",
          "description": "Максимальная температура"
        },
        "temperatureMin": {
          "type": "number",
          "format": "float",
          "description": "Минимальная температура"
        },
        "trailerExternalId": {
          "type": "string",
          "description": "Внешний ID прицепа"
        },
        "vehicleExternalId": {
          "type": "string",
          "description": "Внешний ID ТС"
        }
      },
      "title": "Заявка на перевозку с созданием рейса"
    },
    "Информация о пользователе системы": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "ФИО"
        },
        "login": {
          "type": "string",
          "description": "Логин"
        },
        "name": {
          "type": "string",
          "description": "ФИО"
        }
      },
      "title": "Информация о пользователе системы"
    },
    "Марка ТС": {
      "type": "object",
      "required": [
        "carrierId",
        "name"
      ],
      "properties": {
        "carrierId": {
          "type": "integer",
          "format": "int32",
          "description": "ID перевозчика"
        },
        "externalId": {
          "type": "string",
          "description": "Внешний ID"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор"
        },
        "name": {
          "type": "string",
          "description": "Наименование"
        }
      },
      "title": "Марка ТС"
    },
    "Модель ТС": {
      "type": "object",
      "required": [
        "brandId",
        "name",
        "vehicleType"
      ],
      "properties": {
        "bodyVolumeInCubicMeters": {
          "type": "number",
          "format": "float",
          "description": "Объем кузова, м3"
        },
        "brandId": {
          "type": "integer",
          "format": "int32",
          "description": "ID марки ТС"
        },
        "distanceBetweenRegularMaintenance": {
          "type": "integer",
          "format": "int32",
          "description": "Пробег между ТС"
        },
        "externalId": {
          "type": "string",
          "description": "Внешний ID"
        },
        "fuelConsumption": {
          "type": "number",
          "format": "float",
          "description": "Расход топлива"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор"
        },
        "name": {
          "type": "string",
          "description": "Наименование"
        },
        "numberOfPallets": {
          "type": "integer",
          "format": "int32",
          "description": "Паллетовместимость"
        },
        "tonnageInKg": {
          "type": "number",
          "format": "float",
          "description": "Тоннаж, кг"
        },
        "vehicleType": {
          "type": "string",
          "description": "Тип ТС. Допустимые значения: TRUCK_TRACTOR:Тягач, TRAILER:Полуприцеп, WAGON:Грузовик, BUS:Автобус, PASSENGER:Легковой, MOTORCYCLE:Мототехника, HIND_CARRIAGE:Прицеп",
          "enum": [
            "TRUCK_TRACTOR",
            "TRAILER",
            "WAGON",
            "BUS",
            "PASSENGER",
            "MOTORCYCLE",
            "HIND_CARRIAGE"
          ]
        }
      },
      "title": "Модель ТС"
    },
    "Назначение водителя на ТС": {
      "type": "object",
      "required": [
        "carrierId",
        "driverId",
        "finishTime",
        "startTime",
        "vehicleIds"
      ],
      "properties": {
        "carrierId": {
          "type": "integer",
          "format": "int32",
          "description": "ID перевозчика"
        },
        "driverId": {
          "type": "integer",
          "format": "int32",
          "description": "ID водителя"
        },
        "externalId": {
          "type": "string",
          "description": "Внешний ID"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "Время окончания"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Время начала"
        },
        "vehicleIds": {
          "type": "array",
          "description": "ID машин",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "title": "Назначение водителя на ТС"
    },
    "Организации перевозчика": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "carrierId": {
          "type": "integer",
          "format": "int32",
          "description": "ID перевозчика"
        },
        "externalId": {
          "type": "string",
          "description": "Внешний ID"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор"
        },
        "name": {
          "type": "string",
          "description": "Название организации "
        }
      },
      "title": "Организации перевозчика"
    },
    "Перевозчик (транспортная компания)": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "externalId": {
          "type": "string",
          "description": "Внешний ID"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор"
        },
        "name": {
          "type": "string",
          "description": "Наименование"
        }
      },
      "title": "Перевозчик (транспортная компания)"
    },
    "Подразделение перевозчика": {
      "type": "object",
      "required": [
        "carrierPointId",
        "name"
      ],
      "properties": {
        "carrierId": {
          "type": "integer",
          "format": "int32",
          "description": "ID перевозчика"
        },
        "carrierPointId": {
          "type": "integer",
          "format": "int32",
          "description": "Id точки перевозчика"
        },
        "externalId": {
          "type": "string",
          "description": "Внешний ID"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор"
        },
        "name": {
          "type": "string",
          "description": "Наименование"
        }
      },
      "title": "Подразделение перевозчика"
    },
    "Пропуск ТС": {
      "type": "object",
      "required": [
        "expirationDate",
        "issuedBy",
        "issuedDate",
        "number",
        "typeId"
      ],
      "properties": {
        "active": {
          "type": "boolean",
          "description": "Признак активности"
        },
        "expirationDate": {
          "type": "string",
          "format": "date",
          "description": "Дата окончания"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор"
        },
        "issuedBy": {
          "type": "string",
          "description": "Кем выдан"
        },
        "issuedDate": {
          "type": "string",
          "format": "date",
          "description": "Дата выдачи"
        },
        "number": {
          "type": "string",
          "description": "Номер"
        },
        "typeId": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор типа пропуска"
        }
      },
      "title": "Пропуск ТС"
    },
    "Путевой лист": {
      "type": "object",
      "properties": {
        "guid": {
          "type": "string",
          "description": "GUID"
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "Дата создания"
        },
        "extNum": {
          "type": "string",
          "description": "Внешний номер ПЛ"
        },
        "status": {
          "type": "string",
          "description": "Статус путевого листа. Допустимые значения: IN_PROGRESS:В работе, CLOSED:Закрыт, CANCELED:Сторнирован"
        },
        "statusTime": {
          "type": "string",
          "format": "date-time",
          "description": "Дата присвоения статуса"
        },
        "beginTime": {
          "type": "string",
          "format": "date-time",
          "description": "Дата начала работы по ПЛ"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Дата окончания работы по ПЛ"
        },
        "gosNum": {
          "type": "string",
          "description": "Гос. номер ТС"
        },
        "vehicleId": {
          "type": "integer",
          "format": "int32",
          "description": "ID ТС в TMS"
        },
        "extVehicleId": {
          "type": "string",
          "description": "Внешний ID TC"
        },
        "trailerGosNum": {
          "type": "string",
          "description": "Гос. номер прицепа"
        },
        "trailerVehicleId": {
          "type": "integer",
          "format": "int32",
          "description": "ID прицепа в TMS"
        },
        "trailerExtVehicleId": {
          "type": "string",
          "description": "Внешний ID прицепа"
        },
        "driver1Name": {
          "type": "string",
          "description": "ФИО водителя №1"
        },
        "driver1ExtId": {
          "type": "string",
          "description": "Внешний ID водителя №1"
        },
        "driver2Name": {
          "type": "string",
          "description": "ФИО водителя №2"
        },
        "driver2ExtId": {
          "type": "string",
          "description": "Внешний ID водителя №2"
        },
        "odometerBegin": {
          "type": "number",
          "format": "float",
          "description": "Одометр ТС начало, км"
        },
        "odometerEnd": {
          "type": "number",
          "format": "float",
          "description": "Одометр ТС окончание, км"
        },
        "petrolBegin": {
          "type": "number",
          "format": "float",
          "description": "Бензин ТС остаток начало, л"
        },
        "dieselBegin": {
          "type": "number",
          "format": "float",
          "description": "Дизель ТС остаток начало, л"
        },
        "metaneBegin": {
          "type": "number",
          "format": "float",
          "description": "Газ ТС (Метан) остаток начало, м3"
        },
        "propaneBegin": {
          "type": "number",
          "format": "float",
          "description": "Газ ТС (пропан-бутан) остаток начало, л"
        },
        "adblueBegin": {
          "type": "number",
          "format": "float",
          "description": "AdBlue ТС остаток начало, л"
        },
        "engineHoursHouBegin": {
          "type": "number",
          "format": "float",
          "description": "Моточасы ХОУ ТС начало, ч"
        },
        "petrolEnd": {
          "type": "number",
          "format": "float",
          "description": "Бензин ТС остаток конец, л"
        },
        "dieselEnd": {
          "type": "number",
          "format": "float",
          "description": "Дизель ТС остаток конец, л"
        },
        "metaneEnd": {
          "type": "number",
          "format": "float",
          "description": "Газ ТС (Метан) остаток конец, м3"
        },
        "propaneEnd": {
          "type": "number",
          "format": "float",
          "description": "Газ ТС (пропан-бутан) остаток конец, л"
        },
        "adblueEnd": {
          "type": "number",
          "format": "float",
          "description": "AdBlue ТС остаток конец, л"
        },
        "engineHoursHouEnd": {
          "type": "number",
          "format": "float",
          "description": "Моточасы ХОУ ТС конец, ч"
        },
        "gasolineConspumptionLimit": {
          "type": "number",
          "format": "float",
          "description": "Установленная норма расхода бензина на ТС. л/100км"
        },
        "dieselConspumptionLimit": {
          "type": "number",
          "format": "float",
          "description": "Установленная норма расхода дизеля на ТС. л/100км"
        },
        "dieselConspumptionLimitWGdo": {
          "type": "number",
          "format": "float",
          "description": "Установленная норма расхода дизеля на ТС с активным ГДО. л/100км"
        },
        "propaneConspumptionLimit": {
          "type": "number",
          "format": "float",
          "description": "Установленная норма расхода газа (пропан-бутан) на ТС. л/100км"
        },
        "metaneSubstitutionRate": {
          "type": "number",
          "format": "float",
          "description": "Установленная норма коэф. замещения газом (метан) дизеля на ТС."
        },
        "dieselConspumptionLimitHou": {
          "type": "number",
          "format": "float",
          "description": "Установленная норма расхода дизеля ХОУ ТС, л/мч"
        },
        "trailerDieselBegin": {
          "type": "number",
          "format": "float",
          "description": "Дизель прицеп остаток начало, л"
        },
        "trailerEngineHoursHouBegin": {
          "type": "number",
          "format": "float",
          "description": "Моточасы ХОУ прицеп начало, ч"
        },
        "trailerDieselEnd": {
          "type": "number",
          "format": "float",
          "description": "Дизель прицеп остаток конец, л"
        },
        "trailerEngineHoursHouEnd": {
          "type": "number",
          "format": "float",
          "description": "Моточасы ХОУ прицеп конец, ч"
        },
        "trailerDieselConspumptionLimitHou": {
          "type": "number",
          "format": "float",
          "description": "Установленная норма расхода дизеля ХОУ прицеп, л/мч"
        }
      },
      "title": "Путевой лист"
    },
    "Рейс": {
      "type": "object",
      "properties": {
        "actualDistance": {
          "type": "integer",
          "format": "int64",
          "description": "Фактический пробег"
        },
        "approval": {
          "description": "Информация по подтверждению рейса",
          "$ref": "#/definitions/ShipmentApprovalDto"
        },
        "cancellationRecord": {
          "description": "Информация по отмене рейса",
          "$ref": "#/definitions/ShipmentCancellationRecordDto"
        },
        "carrierId": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор перевозчика"
        },
        "carrierOrganizationId": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор организации"
        },
        "comment": {
          "type": "string",
          "description": "Комментарий"
        },
        "commercialTypeId": {
          "type": "integer",
          "format": "int32",
          "description": "Id типа коммерческого рейса"
        },
        "commercialTypeName": {
          "type": "string",
          "description": "Наименование типа коммерческого рейса"
        },
        "completeOnLastPoint": {
          "type": "boolean",
          "example": false,
          "description": "Завершить рейс по въезду в последнюю точку"
        },
        "confirmationSent": {
          "type": "boolean",
          "description": "Подтверждение отправлено"
        },
        "costInRubles": {
          "type": "number",
          "description": "Стоимость в рублях"
        },
        "createdByFio": {
          "type": "string",
          "description": "ФИО создателя"
        },
        "createdByLogin": {
          "type": "string",
          "description": "Логин создателя"
        },
        "currentPointId": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор текущей точки"
        },
        "customer": {
          "description": "Клиент",
          "$ref": "#/definitions/Заказчик перевозок"
        },
        "distanceInMeters": {
          "type": "number",
          "format": "double",
          "description": "Дистанция в метрах"
        },
        "driverFio": {
          "type": "string",
          "description": "ФИО водителя"
        },
        "driverId": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор водителя"
        },
        "driverLicenceNumber": {
          "type": "string",
          "description": "Номер водительского удостоверения"
        },
        "driverPassportIssuedDate": {
          "type": "string",
          "format": "date",
          "description": "Дата выдачи паспорта"
        },
        "driverPassportNumber": {
          "type": "string",
          "description": "Серия и номер паспорта"
        },
        "driverPhone": {
          "type": "string",
          "description": "Телефон водителя"
        },
        "externalNumber": {
          "type": "string",
          "description": "Внешние идентификаторы заявок"
        },
        "factFinishTime": {
          "type": "string",
          "format": "date-time",
          "description": "Фактическое время окончания"
        },
        "factStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "Фактическое время начала"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "Плановое время окончания"
        },
        "firstPoint": {
          "description": "Первая точка",
          "$ref": "#/definitions/ShipmentStatePointDto"
        },
        "highestIncidentImportance": {
          "type": "string",
          "description": "Максимальная значимость инцидента",
          "enum": [
            "LOW",
            "MEDIUM",
            "HIGH"
          ]
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastPoint": {
          "description": "Последняя точка",
          "$ref": "#/definitions/ShipmentStatePointDto"
        },
        "numberOfPallets": {
          "type": "integer",
          "format": "int32",
          "description": "Количество паллет"
        },
        "outerNumber": {
          "type": "string",
          "description": "Внешний номер заявки"
        },
        "passingByTelematics": {
          "type": "boolean",
          "description": "Прохождение рейса по телематике"
        },
        "pointStatus": {
          "type": "string",
          "description": "Статус текущей точки",
          "enum": [
            "NOT_VISITED",
            "MOVING",
            "WAITING",
            "EXECUTING",
            "PAPERWORK",
            "FINISHED"
          ]
        },
        "points": {
          "type": "array",
          "description": "Последняя точка",
          "items": {
            "$ref": "#/definitions/ShipmentStatePointDto"
          }
        },
        "qrCode": {
          "type": "string",
          "description": "QR код рейса"
        },
        "requestIds": {
          "type": "array",
          "description": "Идентификаторы заявок",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "routeNum": {
          "type": "string"
        },
        "secondRoute": {
          "type": "boolean",
          "description": "атрибут рейса \"Второй рейс\""
        },
        "speedInMetersPerSecond": {
          "type": "number",
          "format": "double"
        },
        "speedModeTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Плановое время начала"
        },
        "status": {
          "type": "string",
          "description": "Статус",
          "enum": [
            "NEW",
            "PENDING",
            "ACCEPTED",
            "EXECUTING",
            "COMPLETED",
            "REJECTED",
            "NOT_COMPLETED",
            "PARTIALLY_COMPLETED"
          ]
        },
        "tech": {
          "type": "boolean",
          "description": "Признак технологического рейса"
        },
        "techReasonId": {
          "type": "integer",
          "format": "int32",
          "description": "Id основания для технологического рейса"
        },
        "techReasonName": {
          "type": "string",
          "description": "Наименование основания для технологического рейса"
        },
        "temperatureMax": {
          "type": "number",
          "format": "float",
          "description": "Максимальная температура"
        },
        "temperatureMin": {
          "type": "number",
          "format": "float",
          "description": "Минимальная температура"
        },
        "trailerBodyType": {
          "type": "string",
          "description": "Тип кузова прицепа",
          "enum": [
            "TRANSPORTER",
            "ONBOARD",
            "CONTAINER",
            "PLATFORM",
            "MANUFACTURE",
            "AWNING",
            "REF",
            "ISOTERM",
            "REF_MULTI",
            "DUMP",
            "TRAWL",
            "ALL_METAL",
            "CISTERN",
            "SEDAN",
            "MINIVAN",
            "BUS",
            "AWNING_CMR",
            "ONBOARD_CMR",
            "CEMENT"
          ]
        },
        "trailerBodyVolumeInCubicMeters": {
          "type": "number",
          "format": "float",
          "description": "Объём кузова прицепа"
        },
        "trailerBrandName": {
          "type": "string",
          "description": "Наименование марки прицепа"
        },
        "trailerFactTonnage": {
          "type": "number",
          "format": "float",
          "description": "Фактический тоннаж прицепа"
        },
        "trailerGosNums": {
          "type": "string",
          "description": "Номер прицепа"
        },
        "trailerId": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор прицепа"
        },
        "trailerModelName": {
          "type": "string",
          "description": "Наименование модели прицепа"
        },
        "trailerNumberOfPallets": {
          "type": "integer",
          "format": "int32",
          "description": "Паллетовместимость прицепа"
        },
        "trailerType": {
          "type": "string",
          "description": "Тип прицепа",
          "enum": [
            "BUS",
            "PASSENGER",
            "MOTORCYCLE",
            "TRUCK_TRACTOR",
            "TRAILER",
            "HIND_CARRIAGE",
            "WAGON",
            "DUMP"
          ]
        },
        "vehicleBodyType": {
          "type": "string",
          "description": "Тип кузова",
          "enum": [
            "TRANSPORTER",
            "ONBOARD",
            "CONTAINER",
            "PLATFORM",
            "MANUFACTURE",
            "AWNING",
            "REF",
            "ISOTERM",
            "REF_MULTI",
            "DUMP",
            "TRAWL",
            "ALL_METAL",
            "CISTERN",
            "SEDAN",
            "MINIVAN",
            "BUS",
            "AWNING_CMR",
            "ONBOARD_CMR",
            "CEMENT"
          ]
        },
        "vehicleBodyVolumeInCubicMeters": {
          "type": "number",
          "format": "float",
          "description": "Объём кузова"
        },
        "vehicleBrandName": {
          "type": "string",
          "description": "Наименование марки ТС"
        },
        "vehicleFactTonnage": {
          "type": "number",
          "format": "float",
          "description": "Фактический тоннаж"
        },
        "vehicleGosNums": {
          "type": "string",
          "description": "Номера ТС"
        },
        "vehicleId": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор ТС"
        },
        "vehicleIds": {
          "type": "array",
          "description": "Идентификаторы ТС",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "vehicleModelName": {
          "type": "string",
          "description": "Наименование модели ТС"
        },
        "vehicleNumberOfPallets": {
          "type": "integer",
          "format": "int32",
          "description": "Паллетовместимость"
        },
        "vehicleType": {
          "type": "string",
          "description": "Тип ТС",
          "enum": [
            "BUS",
            "PASSENGER",
            "MOTORCYCLE",
            "TRUCK_TRACTOR",
            "TRAILER",
            "HIND_CARRIAGE",
            "WAGON",
            "DUMP"
          ]
        },
        "zoneNum": {
          "type": "integer",
          "format": "int32",
          "description": "атрибут рейса \"Зона\""
        }
      },
      "title": "Рейс"
    },
    "Рейс c прикрепленными файлами": {
      "type": "object",
      "properties": {
        "actualDistance": {
          "type": "integer",
          "format": "int64"
        },
        "approval": {
          "$ref": "#/definitions/ShipmentApprovalDto"
        },
        "attachments": {
          "type": "array",
          "description": "Прикрепленные к рейсу файлы",
          "items": {
            "$ref": "#/definitions/ShipmentFileDto"
          }
        },
        "cancellationRecord": {
          "$ref": "#/definitions/ShipmentCancellationRecordDto"
        },
        "carrierId": {
          "type": "integer",
          "format": "int32"
        },
        "carrierOrganizationId": {
          "type": "integer",
          "format": "int32"
        },
        "comment": {
          "type": "string"
        },
        "commercialTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "commercialTypeName": {
          "type": "string"
        },
        "completeOnLastPoint": {
          "type": "boolean"
        },
        "confirmationSent": {
          "type": "boolean"
        },
        "costInRubles": {
          "type": "number"
        },
        "createdByFio": {
          "type": "string"
        },
        "createdByLogin": {
          "type": "string"
        },
        "currentPointId": {
          "type": "integer",
          "format": "int64"
        },
        "customer": {
          "$ref": "#/definitions/Заказчик перевозок"
        },
        "distanceInMeters": {
          "type": "number",
          "format": "double"
        },
        "driverFio": {
          "type": "string"
        },
        "driverId": {
          "type": "integer",
          "format": "int32"
        },
        "driverLicenceNumber": {
          "type": "string"
        },
        "driverPassportIssuedDate": {
          "type": "string",
          "format": "date"
        },
        "driverPassportNumber": {
          "type": "string"
        },
        "driverPhone": {
          "type": "string"
        },
        "externalNumber": {
          "type": "string"
        },
        "factFinishTime": {
          "type": "string",
          "format": "date-time"
        },
        "factStartTime": {
          "type": "string",
          "format": "date-time"
        },
        "finishTime": {
          "type": "string",
          "format": "date-time"
        },
        "firstPoint": {
          "$ref": "#/definitions/ShipmentStatePointDto"
        },
        "highestIncidentImportance": {
          "type": "string",
          "enum": [
            "LOW",
            "MEDIUM",
            "HIGH"
          ]
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastPoint": {
          "$ref": "#/definitions/ShipmentStatePointDto"
        },
        "numberOfPallets": {
          "type": "integer",
          "format": "int32"
        },
        "outerNumber": {
          "type": "string"
        },
        "passingByTelematics": {
          "type": "boolean"
        },
        "pointStatus": {
          "type": "string",
          "enum": [
            "NOT_VISITED",
            "MOVING",
            "WAITING",
            "EXECUTING",
            "PAPERWORK",
            "FINISHED"
          ]
        },
        "points": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShipmentStatePointDto"
          }
        },
        "qrCode": {
          "type": "string"
        },
        "requestIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "routeNum": {
          "type": "string"
        },
        "secondRoute": {
          "type": "boolean"
        },
        "speedInMetersPerSecond": {
          "type": "number",
          "format": "double"
        },
        "speedModeTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "enum": [
            "NEW",
            "PENDING",
            "ACCEPTED",
            "EXECUTING",
            "COMPLETED",
            "REJECTED",
            "NOT_COMPLETED",
            "PARTIALLY_COMPLETED"
          ]
        },
        "tech": {
          "type": "boolean"
        },
        "techReasonId": {
          "type": "integer",
          "format": "int32"
        },
        "techReasonName": {
          "type": "string"
        },
        "temperatureMax": {
          "type": "number",
          "format": "float"
        },
        "temperatureMin": {
          "type": "number",
          "format": "float"
        },
        "trailerBodyType": {
          "type": "string",
          "enum": [
            "TRANSPORTER",
            "ONBOARD",
            "CONTAINER",
            "PLATFORM",
            "MANUFACTURE",
            "AWNING",
            "REF",
            "ISOTERM",
            "REF_MULTI",
            "DUMP",
            "TRAWL",
            "ALL_METAL",
            "CISTERN",
            "SEDAN",
            "MINIVAN",
            "BUS",
            "AWNING_CMR",
            "ONBOARD_CMR",
            "CEMENT"
          ]
        },
        "trailerBodyVolumeInCubicMeters": {
          "type": "number",
          "format": "float"
        },
        "trailerBrandName": {
          "type": "string"
        },
        "trailerFactTonnage": {
          "type": "number",
          "format": "float"
        },
        "trailerGosNums": {
          "type": "string"
        },
        "trailerId": {
          "type": "integer",
          "format": "int32"
        },
        "trailerModelName": {
          "type": "string"
        },
        "trailerNumberOfPallets": {
          "type": "integer",
          "format": "int32"
        },
        "trailerType": {
          "type": "string",
          "enum": [
            "BUS",
            "PASSENGER",
            "MOTORCYCLE",
            "TRUCK_TRACTOR",
            "TRAILER",
            "HIND_CARRIAGE",
            "WAGON",
            "DUMP"
          ]
        },
        "vehicleBodyType": {
          "type": "string",
          "enum": [
            "TRANSPORTER",
            "ONBOARD",
            "CONTAINER",
            "PLATFORM",
            "MANUFACTURE",
            "AWNING",
            "REF",
            "ISOTERM",
            "REF_MULTI",
            "DUMP",
            "TRAWL",
            "ALL_METAL",
            "CISTERN",
            "SEDAN",
            "MINIVAN",
            "BUS",
            "AWNING_CMR",
            "ONBOARD_CMR",
            "CEMENT"
          ]
        },
        "vehicleBodyVolumeInCubicMeters": {
          "type": "number",
          "format": "float"
        },
        "vehicleBrandName": {
          "type": "string"
        },
        "vehicleFactTonnage": {
          "type": "number",
          "format": "float"
        },
        "vehicleGosNums": {
          "type": "string"
        },
        "vehicleId": {
          "type": "integer",
          "format": "int32"
        },
        "vehicleIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "vehicleModelName": {
          "type": "string"
        },
        "vehicleNumberOfPallets": {
          "type": "integer",
          "format": "int32"
        },
        "vehicleType": {
          "type": "string",
          "enum": [
            "BUS",
            "PASSENGER",
            "MOTORCYCLE",
            "TRUCK_TRACTOR",
            "TRAILER",
            "HIND_CARRIAGE",
            "WAGON",
            "DUMP"
          ]
        },
        "zoneNum": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Рейс c прикрепленными файлами"
    },
    "Состояние прохождения рейса": {
      "type": "object",
      "required": [
        "carrierId",
        "id",
        "points",
        "shipmentRequestIds",
        "status"
      ],
      "properties": {
        "carrierId": {
          "type": "integer",
          "format": "int32",
          "description": "ID перевозчика"
        },
        "commercialTypeId": {
          "type": "integer",
          "format": "int32",
          "description": "Id типа коммерческого рейса"
        },
        "commercialTypeName": {
          "type": "string",
          "description": "Наименование типа коммерческого рейса"
        },
        "completeOnLastPoint": {
          "type": "boolean",
          "example": false,
          "description": "Завершить рейс по въезду в последнюю точку"
        },
        "driverId": {
          "type": "integer",
          "format": "int32",
          "description": "ID водителя"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор рейса"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time",
          "description": "Дата последней модификации"
        },
        "points": {
          "type": "array",
          "description": "Список состояний точек",
          "items": {
            "$ref": "#/definitions/Состояние точки рейса"
          }
        },
        "shipmentRequestIds": {
          "type": "array",
          "description": "Идентификаторы заявок на перевозку, по которым создан рейс",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "status": {
          "type": "string",
          "description": "Статус рейса",
          "enum": [
            "NEW",
            "PENDING",
            "ACCEPTED",
            "EXECUTING",
            "COMPLETED",
            "REJECTED",
            "NOT_COMPLETED",
            "PARTIALLY_COMPLETED"
          ]
        },
        "tech": {
          "type": "boolean",
          "description": "Признак технологического рейса"
        },
        "techReasonId": {
          "type": "integer",
          "format": "int32",
          "description": "Id основания для технологического рейса"
        },
        "techReasonName": {
          "type": "string",
          "description": "Наименование основания для технологического рейса"
        },
        "vehicleId": {
          "type": "integer",
          "format": "int32",
          "description": "ID ТС"
        }
      },
      "title": "Состояние прохождения рейса"
    },
    "Состояние точки рейса": {
      "type": "object",
      "required": [
        "id",
        "sequenceNumber"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор точки"
        },
        "operations": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "LOAD",
              "UNLOAD",
              "LOAD_AND_UNLOAD",
              "VISIT",
              "REFUELLING"
            ]
          }
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Порядковый номер точки в рейсе"
        },
        "status": {
          "type": "string",
          "description": "Статус",
          "enum": [
            "NOT_PASSED_YET",
            "ON_POINT",
            "OK",
            "NEAR",
            "FAIL"
          ]
        }
      },
      "title": "Состояние точки рейса"
    },
    "Темплейт маршрута для рейса": {
      "type": "object",
      "required": [
        "customerId",
        "name",
        "points"
      ],
      "properties": {
        "cost": {
          "type": "integer",
          "format": "int32",
          "description": "Стоимость перевозки груза по маршруту"
        },
        "customerId": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор клиента"
        },
        "externalId": {
          "type": "string",
          "description": "Внешний идентификатор темплейта"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор. Не заполняется при создании нового шаблона маршрута"
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Длина маршрута"
        },
        "name": {
          "type": "string",
          "description": "Название темплейта"
        },
        "points": {
          "type": "array",
          "description": "Локации маршрута",
          "items": {
            "$ref": "#/definitions/ShipmentRequestPointDto"
          }
        }
      },
      "title": "Темплейт маршрута для рейса"
    },
    "Тип пропуска ТС": {
      "type": "object",
      "required": [
        "carrierId",
        "name",
        "polygonId"
      ],
      "properties": {
        "carrierId": {
          "type": "integer",
          "format": "int32",
          "description": "ID перевозчика"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор"
        },
        "includedTypesId": {
          "type": "array",
          "description": "Включенные типы пропусков",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "name": {
          "type": "string",
          "description": "Название пропуска"
        },
        "polygonId": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор полигона"
        }
      },
      "title": "Тип пропуска ТС"
    },
    "Точка заявки": {
      "type": "object",
      "required": [
        "customerPointId",
        "finishTime",
        "operations",
        "startTime"
      ],
      "properties": {
        "comment": {
          "type": "string",
          "example": "Какой-то комментарий к точке",
          "description": "Комментарий к точке, не более 300 символов"
        },
        "consigneeId": {
          "type": "integer",
          "format": "int32"
        },
        "customerPointExternalId": {
          "type": "string",
          "description": "Внешний Id точки клиента"
        },
        "customerPointId": {
          "type": "integer",
          "format": "int64",
          "description": "Id точки клиента"
        },
        "documents": {
          "type": "array",
          "description": "Транспортные документы",
          "items": {
            "$ref": "#/definitions/TransportDocumentDto"
          }
        },
        "finishTime": {
          "type": "string",
          "format": "date-time",
          "description": "Время окончания временого окна"
        },
        "finishTimeOffset": {
          "type": "string",
          "description": "Часовой пояс окончания временого окна"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор"
        },
        "operations": {
          "type": "array",
          "description": "Производимые операции",
          "items": {
            "type": "string",
            "enum": [
              "LOAD",
              "UNLOAD",
              "LOAD_AND_UNLOAD",
              "VISIT",
              "REFUELLING"
            ]
          }
        },
        "orderList": {
          "type": "array",
          "description": "Cписок номеров заказов",
          "items": {
            "type": "string"
          }
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Порядковый номер точки в заявке "
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Время начала временого окна"
        },
        "startTimeOffset": {
          "type": "string",
          "description": "Часовой пояс начала временного окна"
        }
      },
      "title": "Точка заявки"
    },
    "Точка клиента": {
      "type": "object",
      "required": [
        "customerId",
        "externalId",
        "lat",
        "lon",
        "name",
        "osmPointId"
      ],
      "properties": {
        "active": {
          "type": "boolean"
        },
        "customAddress": {
          "type": "string",
          "description": "Адрес клиента"
        },
        "customerId": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор клиента"
        },
        "externalId": {
          "type": "string",
          "description": "Внешний ID"
        },
        "gln": {
          "type": "string",
          "description": "Global location number"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор"
        },
        "lat": {
          "type": "number",
          "format": "double",
          "description": "Широта"
        },
        "lon": {
          "type": "number",
          "format": "double",
          "description": "Долгота"
        },
        "maxVehicleHeightInCentimeters": {
          "type": "number",
          "format": "float",
          "description": "Ограничение по высоте транспортного средства"
        },
        "name": {
          "type": "string",
          "description": "Название точки"
        },
        "osmPointId": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор osm точки"
        },
        "overallAddress": {
          "type": "string"
        },
        "overallLat": {
          "type": "number",
          "format": "double"
        },
        "overallLon": {
          "type": "number",
          "format": "double"
        },
        "passingRadiusInMeters": {
          "type": "number",
          "format": "double",
          "description": "Радиус контроля"
        },
        "tailLiftRequired": {
          "type": "boolean",
          "description": "Необходимость гидроборта"
        }
      },
      "title": "Точка клиента"
    },
    "Точка перевозчика": {
      "type": "object",
      "required": [
        "carrierId",
        "externalId",
        "lat",
        "lon",
        "name",
        "osmPointId"
      ],
      "properties": {
        "active": {
          "type": "boolean"
        },
        "address": {
          "type": "string",
          "description": "Адрес"
        },
        "carrierId": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор перевозчика"
        },
        "externalId": {
          "type": "string",
          "description": "Внешний ID"
        },
        "gln": {
          "type": "string",
          "description": "Global location number"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор"
        },
        "lat": {
          "type": "number",
          "format": "double",
          "description": "Широта"
        },
        "lon": {
          "type": "number",
          "format": "double",
          "description": "Долгота"
        },
        "maxVehicleHeightInCentimeters": {
          "type": "number",
          "format": "float",
          "description": "Ограничение по высоте транспортного средства"
        },
        "name": {
          "type": "string",
          "description": "Название точки"
        },
        "osmPointId": {
          "type": "integer",
          "format": "int64",
          "description": "Идентификатор osm точки"
        },
        "overallAddress": {
          "type": "string"
        },
        "overallLat": {
          "type": "number",
          "format": "double"
        },
        "overallLon": {
          "type": "number",
          "format": "double"
        },
        "passingRadiusInMeters": {
          "type": "number",
          "format": "double",
          "description": "Радиус контроля"
        },
        "tailLiftRequired": {
          "type": "boolean",
          "description": "Необходимость гидроборта"
        }
      },
      "title": "Точка перевозчика"
    },
    "Транспортное средство": {
      "type": "object",
      "required": [
        "carrierDivisionId",
        "carrierOrganizationId",
        "gosNumber",
        "modelId",
        "type"
      ],
      "properties": {
        "active": {
          "type": "boolean",
          "description": "Активность"
        },
        "autoPlanned": {
          "type": "boolean",
          "description": "Автоплан"
        },
        "axleLoadFact": {
          "type": "number",
          "format": "float",
          "description": "Фактическая нагрузка на ось, тонны"
        },
        "bodyType": {
          "type": "string",
          "description": "Тип кузова. Допустимые значения: AWNING:Тент, REF:Рефрижератор, ISO:Изотерм, BT:Рефрижератор мультирежим, TRANSPORTER:Автовоз, ONBOARD:Бортовой, CONTAINER:Контейнеровоз, PLATFORM:Платформа, MANUFACTURE:Промтоварный, DUMP:Самосвал, TRAWL:Трал, ALL_METAL:Цельнометаллический, CISTERN:Цистерна, SEDAN: Седан,MINIVAN:Минивэн, BUS:Автобус",
          "enum": [
            "AWNING",
            "REF",
            "ISO",
            "BT",
            "TRANSPORTER",
            "ONBOARD",
            "CONTAINER",
            "PLATFORM",
            "MANUFACTURE",
            "DUMP",
            "TRAWL",
            "ALL_METAL",
            "CISTERN",
            "SEDAN",
            "MINIVAN",
            "BUS",
            "ISOTERM",
            "REF_MULTI",
            "AWNING_CMR",
            "ONBOARD_CMR",
            "CEMENT"
          ]
        },
        "bodyVolumeInCubicMeters": {
          "type": "number",
          "format": "float",
          "description": "Объем кузова, м3"
        },
        "carrierDivisionId": {
          "type": "integer",
          "format": "int32",
          "description": "ID дивизиона"
        },
        "carrierOrganizationId": {
          "type": "integer",
          "format": "int32",
          "description": "Организация ТС"
        },
        "compressorType": {
          "type": "string",
          "enum": [
            "AUTONOMOUS",
            "ELECTRIC"
          ]
        },
        "doorSensor": {
          "type": "boolean",
          "description": "Наличие датчика двери"
        },
        "emptyTrailerWeightInKg": {
          "type": "integer",
          "format": "int32"
        },
        "environmentalClass": {
          "type": "integer",
          "format": "int32",
          "example": "0,1,2,3,4,5",
          "description": "Экологический класс"
        },
        "equipmentWeightInKg": {
          "type": "integer",
          "format": "int32"
        },
        "externalId": {
          "type": "string",
          "description": "Внешний ID"
        },
        "factTonnage": {
          "type": "number",
          "format": "float",
          "description": "Фактический тоннаж, тонны"
        },
        "fishTransportation": {
          "type": "boolean",
          "description": "Перевозка рыбы"
        },
        "fuelConsumption": {
          "type": "number",
          "format": "float",
          "description": "Расход топлива"
        },
        "gosNumber": {
          "type": "string",
          "description": "Гос. номер"
        },
        "heightInCentimeters": {
          "type": "number",
          "format": "float",
          "description": "Высота, см"
        },
        "hired": {
          "type": "boolean",
          "description": "Признак о том, что транспорт наемный"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор"
        },
        "lengthInCentimeters": {
          "type": "number",
          "format": "float",
          "description": "Длина, см"
        },
        "maxPayload": {
          "type": "number",
          "format": "float",
          "description": "Максимальная грузоподъемность, тонны"
        },
        "maxWeight": {
          "type": "number",
          "format": "float",
          "description": "Разрешенная максимальная масса, тонны"
        },
        "modelId": {
          "type": "integer",
          "format": "int32",
          "description": "ID модели ТС"
        },
        "numberOfPallets": {
          "type": "integer",
          "format": "int32",
          "description": "Паллетовместимость"
        },
        "ownDocumentDate": {
          "type": "string",
          "format": "date-time"
        },
        "ownDocumentNumber": {
          "type": "string"
        },
        "ownerOrganizationId": {
          "type": "integer",
          "format": "int32"
        },
        "ownershipType": {
          "type": "string",
          "enum": [
            "OWN",
            "JOINT_PROPERTY_OF_SPOUSES",
            "RENT",
            "LEASING",
            "FREE_USE"
          ]
        },
        "partition": {
          "type": "boolean",
          "description": "Наличие перегородки"
        },
        "passes": {
          "type": "array",
          "description": "Пропуска ТС",
          "items": {
            "$ref": "#/definitions/Пропуск ТС"
          }
        },
        "phoneNumber": {
          "type": "string",
          "description": "Номер телефона"
        },
        "tailLift": {
          "type": "boolean",
          "description": "Гидроборт"
        },
        "temperatureSensor": {
          "type": "boolean",
          "description": "Наличие температурного датчика"
        },
        "tiltCoverDismantlingType": {
          "type": "string",
          "description": "Тип перегородки. Допустимые значения: BACK:Задняя, SIDE:Боковая, TOP:Верхняя, FULL:Полная",
          "enum": [
            "BACK",
            "SIDE",
            "TOP",
            "FULL"
          ]
        },
        "tonnage": {
          "type": "number",
          "format": "float",
          "description": "Тоннаж, тонны"
        },
        "type": {
          "type": "string",
          "description": "Тип ТС. Допустимые значения: TRUCK_TRACTOR:Тягач, TRAILER:Полуприцеп, WAGON:Грузовик, BUS:Автобус, PASSENGER:Легковой, MOTORCYCLE:Мототехника, HIND_CARRIAGE:Прицеп",
          "enum": [
            "TRUCK_TRACTOR",
            "TRAILER",
            "WAGON",
            "BUS",
            "PASSENGER",
            "MOTORCYCLE",
            "HIND_CARRIAGE"
          ]
        },
        "vin": {
          "type": "string"
        },
        "widthInCentimeters": {
          "type": "number",
          "format": "float",
          "description": "Ширина, см"
        },
        "yearOfIssue": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Транспортное средство"
    },
    "Черный список ТС по клиентам": {
      "type": "object",
      "required": [
        "bodyType",
        "carrierDivisionId",
        "carrierOrganizationId",
        "environmentalClass",
        "fishTransportation",
        "gosNumber",
        "hired",
        "modelId",
        "partition",
        "type"
      ],
      "properties": {
        "active": {
          "type": "boolean",
          "description": "Активность"
        },
        "autoPlanned": {
          "type": "boolean",
          "description": "Автоплан"
        },
        "bodyType": {
          "type": "string",
          "description": "Тип кузова. Допустимые значения: AWNING:Тент, REF:Рефрижератор, ISO:Изотерм, BT:Рефрижератор мультирежим, TRANSPORTER:Автовоз, ONBOARD:Бортовой, CONTAINER:Контейнеровоз, PLATFORM:Платформа, MANUFACTURE:Промтоварный, DUMP:Самосвал, TRAWL:Трал, ALL_METAL:Цельнометаллический, CISTERN:Цистерна",
          "enum": [
            "AWNING",
            "REF",
            "ISO",
            "BT",
            "TRANSPORTER",
            "ONBOARD",
            "CONTAINER",
            "PLATFORM",
            "MANUFACTURE",
            "DUMP",
            "TRAWL",
            "ALL_METAL",
            "CISTERN",
            "SEDAN",
            "MINIVAN",
            "BUS",
            "ISOTERM",
            "REF_MULTI",
            "AWNING_CMR",
            "ONBOARD_CMR",
            "CEMENT"
          ]
        },
        "bodyVolumeInCubicMeters": {
          "type": "number",
          "format": "float",
          "description": "Объем кузова, м3"
        },
        "carrierDivisionId": {
          "type": "integer",
          "format": "int32",
          "description": "ID дивизиона"
        },
        "carrierOrganizationId": {
          "type": "integer",
          "format": "int32",
          "description": "Организация ТС"
        },
        "customerId": {
          "type": "integer",
          "format": "int32",
          "description": "ID клиента"
        },
        "doorSensor": {
          "type": "boolean",
          "description": "Наличие датчика двери"
        },
        "environmentalClass": {
          "type": "integer",
          "format": "int32",
          "example": "0,1,2,3,4,5",
          "description": "Экологический класс"
        },
        "externalId": {
          "type": "string",
          "description": "Внешний ID"
        },
        "factTonnage": {
          "type": "number",
          "format": "float",
          "description": "Фактический тоннаж, тонны"
        },
        "fishTransportation": {
          "type": "boolean",
          "description": "Перевозка рыбы"
        },
        "fuelConsumption": {
          "type": "number",
          "format": "float",
          "description": "Расход топлива"
        },
        "gosNumber": {
          "type": "string",
          "description": "Гос. номер"
        },
        "heightInCentimeters": {
          "type": "number",
          "format": "float",
          "description": "Высота, см"
        },
        "hired": {
          "type": "boolean",
          "description": "Признак о том, что транспорт наемный"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор"
        },
        "modelId": {
          "type": "integer",
          "format": "int32",
          "description": "ID модели ТС"
        },
        "numberOfPallets": {
          "type": "integer",
          "format": "int32",
          "description": "Паллетовместимость"
        },
        "partition": {
          "type": "boolean",
          "description": "Наличие перегородки"
        },
        "passes": {
          "type": "array",
          "description": "Пропуска ТС",
          "items": {
            "$ref": "#/definitions/Пропуск ТС"
          }
        },
        "phoneNumber": {
          "type": "string",
          "description": "Номер телефона"
        },
        "tailLift": {
          "type": "boolean",
          "description": "Гидроборт"
        },
        "temperatureSensor": {
          "type": "boolean",
          "description": "Наличие температурного датчика"
        },
        "tiltCoverDismantlingType": {
          "type": "string",
          "description": "Тип перегородки. Допустимые значения: BACK:Задняя, SIDE:Боковая, TOP:Верхняя, FULL:Полная",
          "enum": [
            "BACK",
            "SIDE",
            "TOP",
            "FULL"
          ]
        },
        "tonnage": {
          "type": "number",
          "format": "float",
          "description": "Тоннаж, тонны"
        },
        "type": {
          "type": "string",
          "description": "Тип ТС. Допустимые значения: TRUCK_TRACTOR:Тягач, TRAILER:Полуприцеп, WAGON:Грузовик, BUS:Автобус, PASSENGER:Легковой, MOTORCYCLE:Мототехника, HIND_CARRIAGE:Прицеп",
          "enum": [
            "TRUCK_TRACTOR",
            "TRAILER",
            "WAGON",
            "BUS",
            "PASSENGER",
            "MOTORCYCLE",
            "HIND_CARRIAGE"
          ]
        }
      },
      "title": "Черный список ТС по клиентам"
    },
    "Черный список водителей по клиентам": {
      "type": "object",
      "required": [
        "carrierDivisionId",
        "firstName",
        "fullName",
        "lastName"
      ],
      "properties": {
        "address": {
          "type": "string",
          "description": "Адрес"
        },
        "carrierDivisionId": {
          "type": "integer",
          "format": "int32",
          "description": "ID дивизиона"
        },
        "customerId": {
          "type": "integer",
          "format": "int32",
          "description": "ID клиента"
        },
        "externalId": {
          "type": "string",
          "description": "Внешний ID"
        },
        "firingDate": {
          "type": "string",
          "format": "date",
          "description": "Дата увольнения"
        },
        "firstName": {
          "type": "string",
          "description": "Имя"
        },
        "fullName": {
          "type": "string",
          "description": "ФИО"
        },
        "hiringDate": {
          "type": "string",
          "format": "date",
          "description": "Дата найма"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "Идентификатор"
        },
        "lastName": {
          "type": "string",
          "description": "Фамилия"
        },
        "middleName": {
          "type": "string",
          "description": "Отчество"
        },
        "organizationId": {
          "type": "integer",
          "format": "int32",
          "description": "Организация"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Номер телефона"
        }
      },
      "title": "Черный список водителей по клиентам"
    }
  }
}